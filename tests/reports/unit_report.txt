ERROR
test_dataframe (test_dataframe.DataFrameTest) ... ERROR
test_dataframe_Function_application_GroupBy_window_agg (test_dataframe.DataFrameTest) ... ok
test_dataframe_Function_application_GroupBy_window_aggregate (test_dataframe.DataFrameTest) ... ok
test_dataframe_Function_application_GroupBy_window_apply (test_dataframe.DataFrameTest) ... ERROR
test_dataframe_Function_application_GroupBy_window_applymap (test_dataframe.DataFrameTest) ... ok
test_dataframe_Function_application_GroupBy_window_ewm (test_dataframe.DataFrameTest) ... ok
test_dataframe_Function_application_GroupBy_window_expanding (test_dataframe.DataFrameTest) ... ok
test_dataframe_Function_application_GroupBy_window_pipe (test_dataframe.DataFrameTest) ... ok
test_dataframe_Function_application_GroupBy_window_transform (test_dataframe.DataFrameTest) ... ok
test_dataframe_append (test_dataframe.DataFrameTest) ... ok
test_dataframe_attributes_axes (test_dataframe.DataFrameTest) ... ok
test_dataframe_attributes_columns (test_dataframe.DataFrameTest) ... ok
test_dataframe_attributes_dtypes (test_dataframe.DataFrameTest) ... ok
test_dataframe_attributes_empty (test_dataframe.DataFrameTest) ... ok
test_dataframe_attributes_ftypes (test_dataframe.DataFrameTest) ... ok
test_dataframe_attributes_index (test_dataframe.DataFrameTest) ... ok
test_dataframe_attributes_ndim (test_dataframe.DataFrameTest) ... ok
test_dataframe_attributes_shape (test_dataframe.DataFrameTest) ... ok
test_dataframe_attributes_size (test_dataframe.DataFrameTest) ... ok
test_dataframe_attributes_values (test_dataframe.DataFrameTest) ... ok
test_dataframe_binary_operator_function_add_list (test_dataframe.DataFrameTest) ... FAIL
test_dataframe_binary_operator_function_add_scalar (test_dataframe.DataFrameTest) ... ok
test_dataframe_binary_operator_function_add_series (test_dataframe.DataFrameTest) ... ok
test_dataframe_binary_operator_function_div_multiIndex_param_level_param_fill_value (test_dataframe.DataFrameTest) ... ok
test_dataframe_binary_operator_function_div_scalar (test_dataframe.DataFrameTest) ... ok
test_dataframe_binary_operator_function_mul_dataframe (test_dataframe.DataFrameTest) ... ok
test_dataframe_binary_operator_function_rdiv_scalar (test_dataframe.DataFrameTest) ... ok
test_dataframe_binary_operator_function_sub_list (test_dataframe.DataFrameTest) ... FAIL
test_dataframe_binary_operator_function_sub_scalar (test_dataframe.DataFrameTest) ... ok
test_dataframe_binary_operator_function_sub_series (test_dataframe.DataFrameTest) ... ok
test_dataframe_column_level_name (test_dataframe.DataFrameTest) ... ok
test_dataframe_computations (test_dataframe.DataFrameTest) ... FAIL
test_dataframe_constructor_from_dict_param_data (test_dataframe.DataFrameTest) ... ok
test_dataframe_constructor_from_dict_param_data_hasNan (test_dataframe.DataFrameTest) ... ok
test_dataframe_constructor_from_dict_param_dtype (test_dataframe.DataFrameTest) ... ok
test_dataframe_constructor_from_dict_param_dtype_hasNan (test_dataframe.DataFrameTest) ... ok
test_dataframe_constructor_from_ndarray_param_columns (test_dataframe.DataFrameTest) ... ok
test_dataframe_constructor_from_ndarray_param_columns_hasNan (test_dataframe.DataFrameTest) ... ok
test_dataframe_multiindex_columns (test_dataframe.DataFrameTest) ... ERROR
test_dataframe_multiindex_names_level (test_dataframe.DataFrameTest) ... ERROR
test_datagrame_attributes_select_dtypes (test_dataframe.DataFrameTest) ... ok
test_multiindex_column_access (test_dataframe.DataFrameTest) ... ERROR
test_reset_index_with_multiindex_columns (test_dataframe.DataFrameTest) ... FAIL
test_from_import_groupby_param_by_compo_date_symbol_all (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_any (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_bfill (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_count (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_cumcount (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_cummax (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_cummin (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_cumprod (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_cumsum (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_ffill (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_first (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_head (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_compo_date_symbol_last (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_max (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_mean (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_median (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_min (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_ngroup (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_compo_date_symbol_nth (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_compo_date_symbol_pct_change (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_prod (test_groupby.GroupByTest) ... FAIL
test_from_import_groupby_param_by_compo_date_symbol_rank (test_groupby.GroupByTest) ... FAIL
test_from_import_groupby_param_by_compo_date_symbol_sem (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_size (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_std (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_sum (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_date_symbol_tail (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_compo_date_symbol_var (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_compo_int_bool_ohlc (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_all (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_any (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_bfill (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_count (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_cumcount (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_cummax (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_cummin (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_cumprod (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_cumsum (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_ffill (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_first (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_head (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_date_last (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_max (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_mean (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_median (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_min (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_ngroup (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_date_nth (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_date_ohlc (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_pct_change (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_prod (test_groupby.GroupByTest) ... FAIL
test_from_import_groupby_param_by_date_rank (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_sem (test_groupby.GroupByTest) ... FAIL
test_from_import_groupby_param_by_date_size (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_std (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_sum (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_date_tail (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_date_var (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_all (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_any (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_bfill (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_count (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_cumcount (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_cummax (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_cummin (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_cumprod (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_cumsum (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_ffill (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_first (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_head (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_float_last (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_max (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_mean (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_median (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_min (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_ngroup (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_float_nth (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_float_ohlc (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_pct_change (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_prod (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_rank (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_sem (test_groupby.GroupByTest) ... FAIL
test_from_import_groupby_param_by_float_size (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_std (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_sum (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_float_tail (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_float_var (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_all (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_any (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_bfill (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_count (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_cumcount (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_cummax (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_cummin (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_cumprod (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_cumsum (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_ffill (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_first (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_head (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_long_last (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_max (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_mean (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_median (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_min (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_ngroup (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_long_nth (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_long_ohlc (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_pct_change (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_prod (test_groupby.GroupByTest) ... FAIL
test_from_import_groupby_param_by_long_rank (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_sem (test_groupby.GroupByTest) ... FAIL
test_from_import_groupby_param_by_long_size (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_std (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_sum (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_long_tail (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_long_var (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_all (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_any (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_bfill (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_count (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_cumcount (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_cummax (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_cummin (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_cumprod (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_cumsum (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_ffill (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_first (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_head (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_symbol_last (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_max (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_mean (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_median (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_min (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_ngroup (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_symbol_nth (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_symbol_ohlc (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_pct_change (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_prod (test_groupby.GroupByTest) ... FAIL
test_from_import_groupby_param_by_symbol_rank (test_groupby.GroupByTest) ... FAIL
test_from_import_groupby_param_by_symbol_sem (test_groupby.GroupByTest) ... FAIL
test_from_import_groupby_param_by_symbol_size (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_std (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_sum (test_groupby.GroupByTest) ... ok
test_from_import_groupby_param_by_symbol_tail (test_groupby.GroupByTest) ... ERROR
test_from_import_groupby_param_by_symbol_var (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_all (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_any (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_bfill (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_count (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_cumcount (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_cummax (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_cummin (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_cumprod (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_cumsum (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_ffill (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_first (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_head (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_compo_date_symbol_last (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_max (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_mean (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_median (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_min (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_ngroup (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_compo_date_symbol_nth (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_compo_date_symbol_ohlc (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_pct_change (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_prod (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_rank (test_groupby.GroupByTest) ... FAIL
test_from_pandas_groupby_param_by_compo_date_symbol_sem (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_compo_date_symbol_size (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_std (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_sum (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_compo_date_symbol_tail (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_compo_date_symbol_var (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_all (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_any (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_bfill (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_count (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_cumcount (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_cummax (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_cummin (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_cumprod (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_cumsum (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_ffill (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_first (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_head (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_date_last (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_max (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_mean (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_median (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_min (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_ngroup (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_date_nth (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_date_ohlc (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_pct_change (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_prod (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_rank (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_sem (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_date_size (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_std (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_sum (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_date_tail (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_date_var (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_all (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_any (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_bfill (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_count (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_cumcount (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_cummax (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_cummin (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_cumprod (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_cumsum (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_ffill (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_first (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_head (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_float_last (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_max (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_mean (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_median (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_min (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_ngroup (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_float_nth (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_float_ohlc (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_pct_change (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_prod (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_rank (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_sem (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_float_size (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_std (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_sum (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_float_tail (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_float_var (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_all (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_any (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_bfill (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_count (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_cumcount (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_cummax (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_cummin (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_cumprod (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_cumsum (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_ffill (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_first (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_head (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_long_last (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_max (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_mean (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_median (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_min (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_ngroup (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_long_nth (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_long_ohlc (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_pct_change (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_prod (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_rank (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_sem (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_long_size (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_std (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_sum (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_long_tail (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_long_var (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_all (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_any (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_bfill (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_count (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_cumcount (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_cummax (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_cummin (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_cumprod (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_cumsum (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_ffill (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_first (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_head (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_symbol_last (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_max (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_mean (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_median (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_min (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_ngroup (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_symbol_nth (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_symbol_ohlc (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_pct_change (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_prod (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_rank (test_groupby.GroupByTest) ... FAIL
test_from_pandas_groupby_param_by_symbol_sem (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_symbol_size (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_std (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_sum (test_groupby.GroupByTest) ... ok
test_from_pandas_groupby_param_by_symbol_tail (test_groupby.GroupByTest) ... ERROR
test_from_pandas_groupby_param_by_symbol_var (test_groupby.GroupByTest) ... ok
test_groupbyObj (test_groupby.GroupByTest) ... ERROR
test_groupby_allocation_verification (test_groupby.GroupByTest) ... ok
test_dfs_groupby_param_by_date_any (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_bfill (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_count (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_cumcount (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_cummax (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_cummin (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_cumprod (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_cumsum (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_ffill (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_first (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_head (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_last (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_max (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_mean (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_median (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_min (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_ngroup (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_nth (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_ohlc (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_pct_change (test_groupby_partition.DfsGroupByTest) ... FAIL
test_dfs_groupby_param_by_date_prod (test_groupby_partition.DfsGroupByTest) ... FAIL
test_dfs_groupby_param_by_date_rank (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_sem (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_size (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_std (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_sum (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_date_tail (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_date_var (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_any (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_bfill (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_count (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_cumcount (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_cummax (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_cummin (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_cumprod (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_cumsum (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_ffill (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_first (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_head (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_last (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_max (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_mean (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_median (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_min (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_ngroup (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_nth (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_ohlc (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_pct_change (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_prod (test_groupby_partition.DfsGroupByTest) ... FAIL
test_dfs_groupby_param_by_long_rank (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_sem (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_size (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_std (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_sum (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_long_tail (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_long_var (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_any (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_bfill (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_count (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_cumcount (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_cummax (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_cummin (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_cumprod (test_groupby_partition.DfsGroupByTest) ... FAIL
test_dfs_groupby_param_by_symbol_cumsum (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_ffill (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_first (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_head (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_last (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_max (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_mean (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_median (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_min (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_ngroup (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_nth (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_ohlc (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_pct_change (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_prod (test_groupby_partition.DfsGroupByTest) ... FAIL
test_dfs_groupby_param_by_symbol_rank (test_groupby_partition.DfsGroupByTest) ... FAIL
test_dfs_groupby_param_by_symbol_sem (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_size (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_std (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_sum (test_groupby_partition.DfsGroupByTest) ... ok
test_dfs_groupby_param_by_symbol_tail (test_groupby_partition.DfsGroupByTest) ... ERROR
test_dfs_groupby_param_by_symbol_var (test_groupby_partition.DfsGroupByTest) ... ok
test_index (test_index.IndexTest) ... ERROR
test_index_properties_T (test_index.IndexTest) ... ERROR
test_index_properties_base (test_index.IndexTest) ... ok
test_index_properties_dtype (test_index.IndexTest) ... ok
test_index_properties_dtype_str (test_index.IndexTest) ... ok
test_index_properties_empty (test_index.IndexTest) ... ERROR
test_index_properties_has_duplicates (test_index.IndexTest) ... ERROR
test_index_properties_inferred_type (test_index.IndexTest) ... ERROR
test_index_properties_is_all_dates (test_index.IndexTest) ... ok
test_index_properties_is_hasnans (test_index.IndexTest) ... ERROR
test_index_properties_is_monotonic (test_index.IndexTest) ... ok
test_index_properties_is_monotonic_decreasing (test_index.IndexTest) ... ok
test_index_properties_is_monotonic_increasing (test_index.IndexTest) ... ok
test_index_properties_is_unique (test_index.IndexTest) ... FAIL
test_index_properties_itemsize (test_index.IndexTest) ... ok
test_index_properties_memory_usage (test_index.IndexTest) ... ERROR
test_index_properties_name (test_index.IndexTest) ... ok
test_index_properties_names (test_index.IndexTest) ... ERROR
test_index_properties_nbytes (test_index.IndexTest) ... ok
test_index_properties_ndim (test_index.IndexTest) ... ok
test_index_properties_shape (test_index.IndexTest) ... ok
test_index_properties_size (test_index.IndexTest) ... ok
test_index_properties_strides (test_index.IndexTest) ... ok
test_index_properties_values (test_index.IndexTest) ... ERROR
test_indexing_dataframe_case_1 (test_indexing.IndexingTest) ... ok
test_indexing_dataframe_case_2 (test_indexing.IndexingTest) ... ok
test_indexing_dataframe_case_3 (test_indexing.IndexingTest) ... ok
test_indexing_dataframe_case_4 (test_indexing.IndexingTest) ... ok
test_indexing_dataframe_head_tail (test_indexing.IndexingTest) ... ok
test_indexing_dataframe_iloc_get (test_indexing.IndexingTest) ... ok
test_indexing_dataframe_iloc_set (test_indexing.IndexingTest) ... ERROR
test_indexing_dataframe_loc_get (test_indexing.IndexingTest) ... ok
test_indexing_dataframe_loc_set (test_indexing.IndexingTest) ... ERROR
test_indexing_series_iloc_get (test_indexing.IndexingTest) ... ok
test_indexing_series_iloc_set (test_indexing.IndexingTest) ... ok
test_indexing_series_loc_get (test_indexing.IndexingTest) ... ok
test_indexing_series_loc_set (test_indexing.IndexingTest) ... ok
test_indexing_series_sort_index (test_indexing.IndexingTest) ... ok
test_read (test_io.InputOutputTest) ... ERROR
test_read_csv_param_index_col (test_io.InputOutputTest) ... ok
test_read_csv_param_index_engine (test_io.InputOutputTest) ... ok
test_read_csv_param_names (test_io.InputOutputTest) ... ok
test_read_csv_param_prefix (test_io.InputOutputTest) ... ok
test_read_csv_param_sep (test_io.InputOutputTest) ... ok
test_read_csv_param_squeeze (test_io.InputOutputTest) ... ok
test_read_csv_param_usecols (test_io.InputOutputTest) ... ok
test_assert_original_dataframe_equal (test_join.JoinTest) ... ok
test_join_from_csv_index_param_lsuffix_paran_how (test_join.JoinTest) ... FAIL
test_join_from_csv_index_param_lsuffix_paran_rsuffix (test_join.JoinTest) ... ok
test_join_from_csv_index_param_lsuffix_paran_sort (test_join.JoinTest) ... ERROR
test_join_from_csv_index_param_on (test_join.JoinTest) ... ok
test_join_from_csv_param_how (test_join.JoinTest) ... ok
test_join_from_csv_param_lsuffix_paran_rsuffix (test_join.JoinTest) ... ok
test_join_from_csv_param_sort (test_join.JoinTest) ... ERROR
test_join_from_dataframe_how (test_join.JoinTest) ... ok
test_join_from_dataframe_index (test_join.JoinTest) ... ok
test_join_from_dataframe_index_param_how (test_join.JoinTest) ... ok
test_join_from_dataframe_index_param_sort (test_join.JoinTest) ... ERROR
test_join_from_dataframe_param_lsuffix_paran_rsuffix (test_join.JoinTest) ... ok
test_join_from_dataframe_param_on (test_join.JoinTest) ... ok
test_join_from_dataframe_sort (test_join.JoinTest) ... ERROR
test_join_from_dfs_index_param_lsuffix_paran_how (test_join_partition.DfsJoinTest) ... ok
test_join_from_dfs_index_param_lsuffix_paran_rsuffix (test_join_partition.DfsJoinTest) ... ok
test_join_from_dfs_index_param_lsuffix_paran_sort (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_index_param_on (test_join_partition.DfsJoinTest) ... ok
test_join_from_dfs_index_with_csv_right_param_lsuffix_paran_how (test_join_partition.DfsJoinTest) ... ok
test_join_from_dfs_index_with_csv_right_param_lsuffix_paran_rsuffix (test_join_partition.DfsJoinTest) ... ok
test_join_from_dfs_index_with_csv_right_param_lsuffix_paran_sort (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_index_with_csv_right_param_on (test_join_partition.DfsJoinTest) ... ok
test_join_from_dfs_param_how (test_join_partition.DfsJoinTest) ... FAIL
test_join_from_dfs_param_lsuffix_paran_rsuffix (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_param_on (test_join_partition.DfsJoinTest) ... ok
test_join_from_dfs_param_sort (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_left_index_param_lsuffix_paran_how (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_left_index_param_lsuffix_paran_rsuffix (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_left_index_param_lsuffix_paran_sort (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_left_index_param_on (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_left_param_how (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_left_param_lsuffix_paran_rsuffix (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_left_param_on (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_left_param_sort (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_right_param_how (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_right_param_lsuffix_paran_rsuffix (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_right_param_on (test_join_partition.DfsJoinTest) ... ERROR
test_join_from_dfs_with_csv_right_param_sort (test_join_partition.DfsJoinTest) ... ERROR
test_assert_original_dataframe_equal (test_merge.MergeTest) ... FAIL
test_merge_from_csv_index_param_how (test_merge.MergeTest) ... ERROR
test_merge_from_csv_index_param_on (test_merge.MergeTest) ... ERROR
test_merge_from_csv_index_param_suffix (test_merge.MergeTest) ... ERROR
test_merge_from_csv_param_how (test_merge.MergeTest) ... ERROR
test_merge_from_csv_param_index (test_merge.MergeTest) ... ERROR
test_merge_from_csv_param_leftonrighton (test_merge.MergeTest) ... ERROR
test_merge_from_csv_param_on (test_merge.MergeTest) ... ERROR
test_merge_from_csv_param_suffix (test_merge.MergeTest) ... ERROR
test_merge_from_dataframe_how (test_merge.MergeTest) ... ok
test_merge_from_dataframe_index (test_merge.MergeTest) ... ok
test_merge_from_dataframe_index_param_how (test_merge.MergeTest) ... ok
test_merge_from_dataframe_param_leftonrighton (test_merge.MergeTest) ... ok
test_merge_from_dataframe_param_suffix (test_merge.MergeTest) ... ok
ERROR
test_boxplot (test_plotting.PLottingTest) ... ok
test_hist (test_plotting.PLottingTest) ... ok
test_plot_area (test_plotting.PLottingTest) ... ERROR
test_plot_bar (test_plotting.PLottingTest) ... ok
test_plot_barh (test_plotting.PLottingTest) ... ok
test_plot_box (test_plotting.PLottingTest) ... ok
test_plot_density (test_plotting.PLottingTest) ... ok
test_plot_hexbin (test_plotting.PLottingTest) ... ok
test_plot_hist (test_plotting.PLottingTest) ... ok
test_plot_kde (test_plotting.PLottingTest) ... ok
test_plot_line (test_plotting.PLottingTest) ... ERROR
test_plot_pie (test_plotting.PLottingTest) ... ok
test_plot_scatter (test_plotting.PLottingTest) ... ok
test_series_hist (test_plotting.PLottingTest) ... FAIL
test_boxplot (test_plotting_partition.DfsPLottingTest) ... ok
test_hist (test_plotting_partition.DfsPLottingTest) ... ok
test_plot_area (test_plotting_partition.DfsPLottingTest) ... ERROR
test_plot_bar (test_plotting_partition.DfsPLottingTest) ... ok
test_plot_barh (test_plotting_partition.DfsPLottingTest) ... ok
test_plot_box (test_plotting_partition.DfsPLottingTest) ... ok
test_plot_density (test_plotting_partition.DfsPLottingTest) ... ok
test_plot_hexbin (test_plotting_partition.DfsPLottingTest) ... ok
test_plot_hist (test_plotting_partition.DfsPLottingTest) ... ok
test_plot_kde (test_plotting_partition.DfsPLottingTest) ... ok
test_plot_line (test_plotting_partition.DfsPLottingTest) ... ok
test_plot_pie (test_plotting_partition.DfsPLottingTest) ... ok
test_plot_scatter (test_plotting_partition.DfsPLottingTest) ... ok
test_from_import_dataframe_resample_param_rule_businessday_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_businessday_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_businessday_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_businessday_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_businessday_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_businessday_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_businessday_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_day_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_day_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_day_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_day_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_day_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_day_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_day_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_hour_param_on_timestamp_count (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_hour_param_on_timestamp_max (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_hour_param_on_timestamp_mean (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_hour_param_on_timestamp_min (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_hour_param_on_timestamp_std (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_hour_param_on_timestamp_sum (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_hour_param_on_timestamp_var (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_max (test_resample.ResampleTest) ... FAIL
test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_min (test_resample.ResampleTest) ... FAIL
test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_minute_param_on_timestamp_count (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_minute_param_on_timestamp_max (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_minute_param_on_timestamp_mean (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_minute_param_on_timestamp_min (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_minute_param_on_timestamp_std (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_minute_param_on_timestamp_sum (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_minute_param_on_timestamp_var (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_month_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_month_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_month_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_month_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_month_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_month_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_month_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_monthbegin_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_monthbegin_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_monthbegin_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_monthbegin_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_monthbegin_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_monthbegin_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_monthbegin_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_second_param_on_timestamp_count (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_second_param_on_timestamp_max (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_second_param_on_timestamp_mean (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_second_param_on_timestamp_min (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_second_param_on_timestamp_std (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_second_param_on_timestamp_sum (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_second_param_on_timestamp_var (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_week_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_week_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_week_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_week_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_week_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_week_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_week_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_count (test_resample.ResampleTest) ... FAIL
test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_max (test_resample.ResampleTest) ... FAIL
test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_mean (test_resample.ResampleTest) ... FAIL
test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_min (test_resample.ResampleTest) ... FAIL
test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_std (test_resample.ResampleTest) ... FAIL
test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_sum (test_resample.ResampleTest) ... FAIL
test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_var (test_resample.ResampleTest) ... FAIL
test_from_import_dataframe_resample_param_rule_year_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_year_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_year_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_year_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_year_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_year_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_import_dataframe_resample_param_rule_year_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_businessday_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_businessday_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_businessday_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_businessday_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_businessday_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_businessday_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_businessday_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_count (test_resample.ResampleTest) ... FAIL
test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_max (test_resample.ResampleTest) ... FAIL
test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_mean (test_resample.ResampleTest) ... FAIL
test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_min (test_resample.ResampleTest) ... FAIL
test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_std (test_resample.ResampleTest) ... FAIL
test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_sum (test_resample.ResampleTest) ... FAIL
test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_var (test_resample.ResampleTest) ... FAIL
test_from_pandas_dataframe_resample_param_rule_day_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_day_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_day_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_day_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_day_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_day_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_day_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_hour_param_on_hour_count (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_hour_param_on_hour_max (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_hour_param_on_hour_mean (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_hour_param_on_hour_min (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_hour_param_on_hour_std (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_hour_param_on_hour_sum (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_hour_param_on_hour_var (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_lastweekofmonth_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_lastweekofmonth_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_lastweekofmonth_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_lastweekofmonth_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_lastweekofmonth_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_lastweekofmonth_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_lastweekofmonth_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_minute_param_on_minute_count (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_minute_param_on_minute_max (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_minute_param_on_minute_mean (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_minute_param_on_minute_min (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_minute_param_on_minute_std (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_minute_param_on_minute_sum (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_minute_param_on_minute_var (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_month_param_on_month_count (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_month_param_on_month_max (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_month_param_on_month_mean (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_month_param_on_month_min (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_month_param_on_month_std (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_month_param_on_month_sum (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_month_param_on_month_var (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_monthbegin_param_on_month_count (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_monthbegin_param_on_month_max (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_monthbegin_param_on_month_mean (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_monthbegin_param_on_month_min (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_monthbegin_param_on_month_std (test_resample.ResampleTest) ... ERROR
test_from_pandas_dataframe_resample_param_rule_monthbegin_param_on_month_sum (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_monthbegin_param_on_month_var (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_second_param_on_second_count (test_resample.ResampleTest) ... ERROR
test_from_pandas_dataframe_resample_param_rule_second_param_on_second_max (test_resample.ResampleTest) ... ERROR
test_from_pandas_dataframe_resample_param_rule_second_param_on_second_mean (test_resample.ResampleTest) ... ERROR
test_from_pandas_dataframe_resample_param_rule_second_param_on_second_min (test_resample.ResampleTest) ... ERROR
test_from_pandas_dataframe_resample_param_rule_second_param_on_second_std (test_resample.ResampleTest) ... ERROR
test_from_pandas_dataframe_resample_param_rule_second_param_on_second_sum (test_resample.ResampleTest) ... ERROR
test_from_pandas_dataframe_resample_param_rule_second_param_on_second_var (test_resample.ResampleTest) ... ERROR
test_from_pandas_dataframe_resample_param_rule_week_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_week_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_week_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_week_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_week_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_week_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_week_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_weekofmonth_param_on_date_count (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_weekofmonth_param_on_date_max (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_weekofmonth_param_on_date_mean (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_weekofmonth_param_on_date_min (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_weekofmonth_param_on_date_std (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_weekofmonth_param_on_date_sum (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_weekofmonth_param_on_date_var (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_year_param_on_month_count (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_year_param_on_month_max (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_year_param_on_month_mean (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_year_param_on_month_min (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_year_param_on_month_std (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_year_param_on_month_sum (test_resample.ResampleTest) ... ok
test_from_pandas_dataframe_resample_param_rule_year_param_on_month_var (test_resample.ResampleTest) ... ok
test_from_pandas_series_resample_param_rule_date_param_on_date (test_resample.ResampleTest) ... ok
test_resample (test_resample.ResampleTest) ... FAIL
test_resample_allocation_verification (test_resample.ResampleTest) ... ok
test_dfs_resample_param_rule_day_param_on_date_count (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_day_param_on_date_max (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_day_param_on_date_mean (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_day_param_on_date_min (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_day_param_on_date_std (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_day_param_on_date_sum (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_day_param_on_date_var (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_hour_param_on_timestamp_count (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_hour_param_on_timestamp_max (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_hour_param_on_timestamp_mean (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_hour_param_on_timestamp_min (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_hour_param_on_timestamp_std (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_hour_param_on_timestamp_sum (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_hour_param_on_timestamp_var (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_minute_param_on_timestamp_count (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_minute_param_on_timestamp_max (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_minute_param_on_timestamp_mean (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_minute_param_on_timestamp_min (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_minute_param_on_timestamp_std (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_minute_param_on_timestamp_sum (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_minute_param_on_timestamp_var (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_month_param_on_date_count (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_month_param_on_date_max (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_month_param_on_date_mean (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_month_param_on_date_min (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_month_param_on_date_std (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_month_param_on_date_sum (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_month_param_on_date_var (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_second_param_on_timestamp_count (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_second_param_on_timestamp_max (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_second_param_on_timestamp_mean (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_second_param_on_timestamp_min (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_second_param_on_timestamp_std (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_second_param_on_timestamp_sum (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_second_param_on_timestamp_var (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_week_param_on_date_count (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_week_param_on_date_max (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_week_param_on_date_mean (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_week_param_on_date_min (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_week_param_on_date_std (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_week_param_on_date_sum (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_week_param_on_date_var (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_year_param_on_date_count (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_year_param_on_date_max (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_year_param_on_date_mean (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_year_param_on_date_min (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_year_param_on_date_std (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_year_param_on_date_sum (test_resample_partition.DfsResampleTest) ... ok
test_dfs_resample_param_rule_year_param_on_date_var (test_resample_partition.DfsResampleTest) ... ok
test_rolling_from_import_param_window_count (test_rolling.RollingTest) ... ok
test_rolling_from_import_param_window_max (test_rolling.RollingTest) ... ok
test_rolling_from_import_param_window_mean (test_rolling.RollingTest) ... ok
test_rolling_from_import_param_window_min (test_rolling.RollingTest) ... ok
test_rolling_from_import_param_window_std (test_rolling.RollingTest) ... ok
test_rolling_from_import_param_window_sum (test_rolling.RollingTest) ... ok
test_rolling_from_import_param_window_var (test_rolling.RollingTest) ... ok
test_rolling_from_pandas_param_window_count (test_rolling.RollingTest) ... ok
test_rolling_from_pandas_param_window_max (test_rolling.RollingTest) ... ok
test_rolling_from_pandas_param_window_mean (test_rolling.RollingTest) ... ok
test_rolling_from_pandas_param_window_min (test_rolling.RollingTest) ... ok
test_rolling_from_pandas_param_window_std (test_rolling.RollingTest) ... ok
test_rolling_from_pandas_param_window_sum (test_rolling.RollingTest) ... ok
test_rolling_from_pandas_param_window_var (test_rolling.RollingTest) ... ok
test_dfs_rolling_param_window_count (test_rolling_partition.DfsRollingTest) ... ok
test_dfs_rolling_param_window_max (test_rolling_partition.DfsRollingTest) ... ok
test_dfs_rolling_param_window_mean (test_rolling_partition.DfsRollingTest) ... ok
test_dfs_rolling_param_window_min (test_rolling_partition.DfsRollingTest) ... ok
test_dfs_rolling_param_window_std (test_rolling_partition.DfsRollingTest) ... ok
test_dfs_rolling_param_window_sum (test_rolling_partition.DfsRollingTest) ... ok
test_dfs_rolling_param_window_var (test_rolling_partition.DfsRollingTest) ... ok
test_series_Function_application_GroupBy_window_ewm (test_series.SeriesTest) ... ok
test_series_add_prefix (test_series.SeriesTest) ... ERROR
test_series_add_suffix (test_series.SeriesTest) ... ERROR
test_series_all (test_series.SeriesTest) ... FAIL
test_series_any (test_series.SeriesTest) ... ok
test_series_append (test_series.SeriesTest) ... ERROR
test_series_attributes_T (test_series.SeriesTest) ... ok
test_series_attributes_array (test_series.SeriesTest) ... ok
test_series_attributes_dtype (test_series.SeriesTest) ... ok
test_series_attributes_dtypes (test_series.SeriesTest) ... ok
test_series_attributes_hasnans (test_series.SeriesTest) ... ERROR
test_series_attributes_index (test_series.SeriesTest) ... ok
test_series_attributes_is_copy (test_series.SeriesTest) ... ok
test_series_attributes_name (test_series.SeriesTest) ... ok
test_series_attributes_nbytes (test_series.SeriesTest) ... ok
test_series_attributes_ndim (test_series.SeriesTest) ... ok
test_series_attributes_shape (test_series.SeriesTest) ... ok
test_series_attributes_size (test_series.SeriesTest) ... ok
test_series_attributes_values (test_series.SeriesTest) ... ok
test_series_binary_operator_function_add_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_add_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_add_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_combine (test_series.SeriesTest) ... ok
test_series_binary_operator_function_combine_first (test_series.SeriesTest) ... ok
test_series_binary_operator_function_div_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_div_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_div_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_dot (test_series.SeriesTest) ... ok
test_series_binary_operator_function_eq (test_series.SeriesTest) ... ok
test_series_binary_operator_function_floordiv_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_floordiv_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_floordiv_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_ge (test_series.SeriesTest) ... ok
test_series_binary_operator_function_gt (test_series.SeriesTest) ... ok
test_series_binary_operator_function_le (test_series.SeriesTest) ... ok
test_series_binary_operator_function_lt (test_series.SeriesTest) ... ok
test_series_binary_operator_function_mod_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_mod_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_mod_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_mul_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_mul_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_mul_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_ne (test_series.SeriesTest) ... ok
test_series_binary_operator_function_pow_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_pow_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_pow_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_product (test_series.SeriesTest) ... ok
test_series_binary_operator_function_radd_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_radd_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_radd_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rdiv_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rdiv_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rdiv_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rfloordiv_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rfloordiv_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rfloordiv_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rmod_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rmod_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rmod_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rmul_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rmul_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rmul_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_round (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rpow_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rpow_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rpow_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rsub_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rsub_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rsub_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rtruediv_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rtruediv_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_rtruediv_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_series_hasnan (test_series.SeriesTest) ... ok
test_series_binary_operator_function_sub_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_sub_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_sub_series (test_series.SeriesTest) ... ok
test_series_binary_operator_function_truediv_list (test_series.SeriesTest) ... ok
test_series_binary_operator_function_truediv_scalar (test_series.SeriesTest) ... ok
test_series_binary_operator_function_truediv_series (test_series.SeriesTest) ... ok
test_series_clip (test_series.SeriesTest) ... FAIL
test_series_computations (test_series.SeriesTest) ... ok
test_series_computations_cum (test_series.SeriesTest) ... ok
test_series_computations_descriptive_stats_mean (test_series.SeriesTest) ... ok
test_series_computations_descriptive_stats_std (test_series.SeriesTest) ... ok
test_series_computations_descriptive_stats_sum (test_series.SeriesTest) ... ok
test_series_computations_descriptive_stats_var (test_series.SeriesTest) ... ok
test_series_constructor (test_series.SeriesTest) ... ok
test_series_constructor_from_scalar (test_series.SeriesTest) ... ok
test_series_constructor_hasFloat (test_series.SeriesTest) ... ok
test_series_constructor_hasNan (test_series.SeriesTest) ... ok
test_series_constructor_with_index (test_series.SeriesTest) ... ok
test_series_dropna (test_series.SeriesTest) ... ERROR
test_series_fillna (test_series.SeriesTest) ... ok
test_series_idxmax (test_series.SeriesTest) ... FAIL
test_series_idxmin (test_series.SeriesTest) ... FAIL
test_series_is_unique (test_series.SeriesTest) ... ERROR
test_series_isin (test_series.SeriesTest) ... FAIL
test_series_isnull (test_series.SeriesTest) ... ok
test_series_nlargest (test_series.SeriesTest) ... ERROR
test_series_nsmallest (test_series.SeriesTest) ... ERROR
test_series_nunique (test_series.SeriesTest) ... ERROR
test_series_quantile (test_series.SeriesTest) ... ok
test_series_rank (test_series.SeriesTest) ... FAIL
test_series_reindexing_selection_labelManipulation_head_tail (test_series.SeriesTest) ... ok
test_series_reindexing_selection_labelManipulation_rename (test_series.SeriesTest) ... ok
test_series_reindexing_selection_labelManipulation_rename_method (test_series.SeriesTest) ... ok
test_series_sort_values (test_series.SeriesTest) ... ok
test_series_to_datetime (test_series.SeriesTest) ... ok
test_binary_operation_function_series_eq (test_series_partition.DfsSeriesTest) ... ok
test_binary_operation_function_series_ge (test_series_partition.DfsSeriesTest) ... ok
test_binary_operation_function_series_gt (test_series_partition.DfsSeriesTest) ... ok
test_binary_operation_function_series_le (test_series_partition.DfsSeriesTest) ... ok
test_binary_operation_function_series_lt (test_series_partition.DfsSeriesTest) ... ok
test_binary_operation_function_series_ne (test_series_partition.DfsSeriesTest) ... ok
test_from_import_where_and (test_where.WhereTest) ... ok
test_from_import_where_and_and (test_where.WhereTest) ... ok
test_from_import_where_and_or (test_where.WhereTest) ... ok
test_from_import_where_operation_add (test_where.WhereTest) ... FAIL
test_from_import_where_operation_div (test_where.WhereTest) ... FAIL
test_from_import_where_operation_groupby (test_where.WhereTest) ... ok
test_from_import_where_operation_mul (test_where.WhereTest) ... FAIL
test_from_import_where_operation_resample (test_where.WhereTest) ... FAIL
test_from_import_where_operation_rolling (test_where.WhereTest) ... FAIL
test_from_import_where_operation_sub (test_where.WhereTest) ... FAIL
test_from_import_where_or (test_where.WhereTest) ... ok
test_from_import_where_or_and (test_where.WhereTest) ... ok
test_from_import_where_or_or (test_where.WhereTest) ... ok
test_from_import_where_param_cond_equal (test_where.WhereTest) ... ok
test_from_import_where_param_cond_greater_than (test_where.WhereTest) ... ok
test_from_import_where_param_cond_greater_than_or_equal (test_where.WhereTest) ... ok
test_from_import_where_param_cond_less_than (test_where.WhereTest) ... FAIL
test_from_import_where_param_cond_less_than_or_equal (test_where.WhereTest) ... FAIL
test_from_import_where_param_cond_not_equal (test_where.WhereTest) ... ok
test_from_pandas_where_and (test_where.WhereTest) ... ok
test_from_pandas_where_and_and (test_where.WhereTest) ... ok
test_from_pandas_where_and_or (test_where.WhereTest) ... ok
test_from_pandas_where_operation_add (test_where.WhereTest) ... ok
test_from_pandas_where_operation_div (test_where.WhereTest) ... ok
test_from_pandas_where_operation_groupby (test_where.WhereTest) ... ok
test_from_pandas_where_operation_mul (test_where.WhereTest) ... ok
test_from_pandas_where_operation_resample (test_where.WhereTest) ... ok
test_from_pandas_where_operation_rolling (test_where.WhereTest) ... ok
test_from_pandas_where_operation_sub (test_where.WhereTest) ... ok
test_from_pandas_where_or (test_where.WhereTest) ... ok
test_from_pandas_where_or_and (test_where.WhereTest) ... ok
test_from_pandas_where_or_or (test_where.WhereTest) ... ok
test_from_pandas_where_param_cond_equal (test_where.WhereTest) ... ok
test_from_pandas_where_param_cond_greater_than (test_where.WhereTest) ... ok
test_from_pandas_where_param_cond_greater_than_or_equal (test_where.WhereTest) ... ok
test_from_pandas_where_param_cond_less_than (test_where.WhereTest) ... ok
test_from_pandas_where_param_cond_less_than_or_equal (test_where.WhereTest) ... ok
test_from_pandas_where_param_cond_not_equal (test_where.WhereTest) ... ok
test_dfs_from_import_where_and (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_import_where_and_and (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_import_where_and_or (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_import_where_operation_add (test_where_partition.DfsWhereTest) ... FAIL
test_dfs_from_import_where_operation_div (test_where_partition.DfsWhereTest) ... FAIL
test_dfs_from_import_where_operation_groupby (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_import_where_operation_mul (test_where_partition.DfsWhereTest) ... FAIL
test_dfs_from_import_where_operation_resample (test_where_partition.DfsWhereTest) ... FAIL
test_dfs_from_import_where_operation_rolling (test_where_partition.DfsWhereTest) ... FAIL
test_dfs_from_import_where_operation_sub (test_where_partition.DfsWhereTest) ... FAIL
test_dfs_from_import_where_or (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_import_where_or_and (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_import_where_or_or (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_import_where_param_cond_equal (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_import_where_param_cond_greater_than (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_import_where_param_cond_greater_than_or_equal (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_import_where_param_cond_less_than (test_where_partition.DfsWhereTest) ... FAIL
test_dfs_from_import_where_param_cond_less_than_or_equal (test_where_partition.DfsWhereTest) ... FAIL
test_dfs_from_import_where_param_cond_not_equal (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_and (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_and_and (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_and_or (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_operation_add (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_operation_div (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_operation_groupby (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_operation_mul (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_operation_resample (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_operation_rolling (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_operation_sub (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_or (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_or_and (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_or_or (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_param_cond_equal (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_param_cond_greater_than (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_param_cond_greater_than_or_equal (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_param_cond_less_than (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_param_cond_less_than_or_equal (test_where_partition.DfsWhereTest) ... ok
test_dfs_from_pandas_where_param_cond_not_equal (test_where_partition.DfsWhereTest) ... ok

======================================================================
ERROR: setUpClass (test_append.DataFrameTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_append.py", line 77, in setUpClass
    Csv.odf_disk = _create_odf_disk(data)
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_append.py", line 30, in _create_odf_disk
    db.loadTextEx(`USPrices,`date, '{data}' ,, tt)""".format(WORK_DIR=WORK_DIR, data=data)
NameError: name 'WORK_DIR' is not defined

======================================================================
ERROR: test_dataframe (test_dataframe.DataFrameTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_dataframe.py", line 598, in test_dataframe
    self.assertEqual(repr(ddf.a.notnull().alias("x").name), repr("x"))
AttributeError: 'BooleanExpression' object has no attribute 'alias'

======================================================================
ERROR: test_dataframe_Function_application_GroupBy_window_apply (test_dataframe.DataFrameTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_dataframe.py", line 389, in test_dataframe_Function_application_GroupBy_window_apply
    odf.sort_values()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 1136, in sort_values
    raise ValueError("by must be provided for DataFrame")
ValueError: by must be provided for DataFrame

======================================================================
ERROR: test_dataframe_multiindex_columns (test_dataframe.DataFrameTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_dataframe.py", line 614, in test_dataframe_multiindex_columns
    self.assertEqual(repr(odf), repr(pdf))
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\base.py", line 141, in __repr__
    return self.to_pandas().__repr__()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 273, in to_pandas
    pdf = _Frame.to_pandas(self)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\base.py", line 160, in to_pandas
    data = self._session.run(self._to_script())
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: Unrecognized column name y.z_c

======================================================================
ERROR: test_dataframe_multiindex_names_level (test_dataframe.DataFrameTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_dataframe.py", line 658, in test_dataframe_multiindex_names_level
    self.assertEqual(repr(odf['X']), repr(pdf['X']))
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 88, in __getitem__
    return self._get_columns(key)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 383, in _get_columns
    new_odf = self._internal[key]
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 456, in __getitem__
    keys, _ = check_key_existence(key, self.data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['X']

======================================================================
ERROR: test_multiindex_column_access (test_dataframe.DataFrameTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_dataframe.py", line 713, in test_multiindex_column_access
    self.assertEqual(repr(odf['a']), repr(pdf['a']))
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 88, in __getitem__
    return self._get_columns(key)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 383, in _get_columns
    new_odf = self._internal[key]
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 456, in __getitem__
    keys, _ = check_key_existence(key, self.data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['a']

======================================================================
ERROR: test_from_import_groupby_param_by_compo_date_symbol_head (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1424, in test_from_import_groupby_param_by_compo_date_symbol_head
    a = self.odf_csv.groupby(['date', 'tsymbol']).head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_from_import_groupby_param_by_compo_date_symbol_ngroup (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1454, in test_from_import_groupby_param_by_compo_date_symbol_ngroup
    a = self.odf_csv.groupby(['date', 'tsymbol']).ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_from_import_groupby_param_by_compo_date_symbol_nth (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1459, in test_from_import_groupby_param_by_compo_date_symbol_nth
    a = self.odf_csv.groupby(['date', 'tsymbol']).nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_from_import_groupby_param_by_compo_date_symbol_tail (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1523, in test_from_import_groupby_param_by_compo_date_symbol_tail
    a = self.odf_csv.groupby(['date', 'tsymbol']).tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_from_import_groupby_param_by_date_head (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 182, in test_from_import_groupby_param_by_date_head
    a = self.odf_csv.groupby('date').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_from_import_groupby_param_by_date_ngroup (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 212, in test_from_import_groupby_param_by_date_ngroup
    a = self.odf_csv.groupby('date').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_from_import_groupby_param_by_date_nth (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 217, in test_from_import_groupby_param_by_date_nth
    a = self.odf_csv.groupby('date').nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_from_import_groupby_param_by_date_tail (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 273, in test_from_import_groupby_param_by_date_tail
    a = self.odf_csv.groupby('date').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_from_import_groupby_param_by_float_head (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1112, in test_from_import_groupby_param_by_float_head
    a = self.odf_csv.groupby('tfloat').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_from_import_groupby_param_by_float_ngroup (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1142, in test_from_import_groupby_param_by_float_ngroup
    a = self.odf_csv.groupby('tfloat').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_from_import_groupby_param_by_float_nth (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1147, in test_from_import_groupby_param_by_float_nth
    a = self.odf_csv.groupby('tfloat').nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_from_import_groupby_param_by_float_tail (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1203, in test_from_import_groupby_param_by_float_tail
    a = self.odf_csv.groupby('tfloat').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_from_import_groupby_param_by_long_head (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 802, in test_from_import_groupby_param_by_long_head
    a = self.odf_csv.groupby('tlong').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_from_import_groupby_param_by_long_ngroup (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 832, in test_from_import_groupby_param_by_long_ngroup
    a = self.odf_csv.groupby('tlong').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_from_import_groupby_param_by_long_nth (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 837, in test_from_import_groupby_param_by_long_nth
    a = self.odf_csv.groupby('tlong').nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_from_import_groupby_param_by_long_tail (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 893, in test_from_import_groupby_param_by_long_tail
    a = self.odf_csv.groupby('tlong').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_from_import_groupby_param_by_symbol_head (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 494, in test_from_import_groupby_param_by_symbol_head
    a = self.odf_csv.groupby('tsymbol').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_from_import_groupby_param_by_symbol_ngroup (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 524, in test_from_import_groupby_param_by_symbol_ngroup
    a = self.odf_csv.groupby('tsymbol').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_from_import_groupby_param_by_symbol_nth (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 529, in test_from_import_groupby_param_by_symbol_nth
    a = self.odf_csv.groupby('tsymbol').nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_from_import_groupby_param_by_symbol_tail (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 584, in test_from_import_groupby_param_by_symbol_tail
    a = self.odf_csv.groupby('tsymbol').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_from_pandas_groupby_param_by_compo_date_symbol_head (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1590, in test_from_pandas_groupby_param_by_compo_date_symbol_head
    a = self.odf.groupby(['date', 'tsymbol']).head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_from_pandas_groupby_param_by_compo_date_symbol_ngroup (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1620, in test_from_pandas_groupby_param_by_compo_date_symbol_ngroup
    a = self.odf.groupby(['date', 'tsymbol']).ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_from_pandas_groupby_param_by_compo_date_symbol_nth (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1625, in test_from_pandas_groupby_param_by_compo_date_symbol_nth
    a = self.odf.groupby(['date', 'tsymbol']).nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_from_pandas_groupby_param_by_compo_date_symbol_sem (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1656, in test_from_pandas_groupby_param_by_compo_date_symbol_sem
    b = self.pdf.groupby(['date', 'tsymbol']).sem()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1321, in sem
    return self.std(ddof=ddof) / np.sqrt(self.count())
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1266, in std
    return np.sqrt(self.var(ddof=ddof, **kwargs))
AttributeError: 'bool' object has no attribute 'sqrt'

======================================================================
ERROR: test_from_pandas_groupby_param_by_compo_date_symbol_tail (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1675, in test_from_pandas_groupby_param_by_compo_date_symbol_tail
    a = self.odf.groupby(['date', 'tsymbol']).tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_from_pandas_groupby_param_by_date_head (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 340, in test_from_pandas_groupby_param_by_date_head
    a = self.odf.groupby('date').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_from_pandas_groupby_param_by_date_ngroup (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 370, in test_from_pandas_groupby_param_by_date_ngroup
    a = self.odf.groupby('date').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_from_pandas_groupby_param_by_date_nth (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 375, in test_from_pandas_groupby_param_by_date_nth
    a = self.odf.groupby('date').nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_from_pandas_groupby_param_by_date_sem (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 407, in test_from_pandas_groupby_param_by_date_sem
    b = self.pdf.groupby('date').sem()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1321, in sem
    return self.std(ddof=ddof) / np.sqrt(self.count())
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1266, in std
    return np.sqrt(self.var(ddof=ddof, **kwargs))
AttributeError: 'bool' object has no attribute 'sqrt'

======================================================================
ERROR: test_from_pandas_groupby_param_by_date_tail (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 426, in test_from_pandas_groupby_param_by_date_tail
    a = self.odf.groupby('date').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_from_pandas_groupby_param_by_float_head (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1270, in test_from_pandas_groupby_param_by_float_head
    a = self.odf.groupby('tfloat').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_from_pandas_groupby_param_by_float_ngroup (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1300, in test_from_pandas_groupby_param_by_float_ngroup
    a = self.odf.groupby('tfloat').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_from_pandas_groupby_param_by_float_nth (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1305, in test_from_pandas_groupby_param_by_float_nth
    a = self.odf.groupby('tfloat').nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_from_pandas_groupby_param_by_float_sem (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1337, in test_from_pandas_groupby_param_by_float_sem
    b = self.pdf.groupby('tfloat').sem()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1321, in sem
    return self.std(ddof=ddof) / np.sqrt(self.count())
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1266, in std
    return np.sqrt(self.var(ddof=ddof, **kwargs))
AttributeError: 'bool' object has no attribute 'sqrt'

======================================================================
ERROR: test_from_pandas_groupby_param_by_float_tail (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1356, in test_from_pandas_groupby_param_by_float_tail
    a = self.odf.groupby('tfloat').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_from_pandas_groupby_param_by_long_head (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 957, in test_from_pandas_groupby_param_by_long_head
    a = self.odf.groupby('tlong').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_from_pandas_groupby_param_by_long_ngroup (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 987, in test_from_pandas_groupby_param_by_long_ngroup
    a = self.odf.groupby('tlong').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_from_pandas_groupby_param_by_long_nth (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 992, in test_from_pandas_groupby_param_by_long_nth
    a = self.odf.groupby('tlong').nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_from_pandas_groupby_param_by_long_sem (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1024, in test_from_pandas_groupby_param_by_long_sem
    b = self.pdf.groupby('tlong').sem()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1321, in sem
    return self.std(ddof=ddof) / np.sqrt(self.count())
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1266, in std
    return np.sqrt(self.var(ddof=ddof, **kwargs))
AttributeError: 'bool' object has no attribute 'sqrt'

======================================================================
ERROR: test_from_pandas_groupby_param_by_long_tail (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1043, in test_from_pandas_groupby_param_by_long_tail
    a = self.odf.groupby('tlong').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_from_pandas_groupby_param_by_symbol_head (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 649, in test_from_pandas_groupby_param_by_symbol_head
    a = self.odf.groupby('tsymbol').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_from_pandas_groupby_param_by_symbol_ngroup (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 679, in test_from_pandas_groupby_param_by_symbol_ngroup
    a = self.odf.groupby('tsymbol').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_from_pandas_groupby_param_by_symbol_nth (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 684, in test_from_pandas_groupby_param_by_symbol_nth
    a = self.odf.groupby('tsymbol').nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_from_pandas_groupby_param_by_symbol_sem (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 715, in test_from_pandas_groupby_param_by_symbol_sem
    b = self.pdf.groupby('tsymbol').sem()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1321, in sem
    return self.std(ddof=ddof) / np.sqrt(self.count())
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1266, in std
    return np.sqrt(self.var(ddof=ddof, **kwargs))
AttributeError: 'bool' object has no attribute 'sqrt'

======================================================================
ERROR: test_from_pandas_groupby_param_by_symbol_tail (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 734, in test_from_pandas_groupby_param_by_symbol_tail
    a = self.odf.groupby('tsymbol').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_groupbyObj (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 81, in test_groupbyObj
    obj_odf = odf.groupby("sym").resample("BA", on="date").sum()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\groupby.py", line 104, in resample
    where_expr=self._where_expr, groupkeys=self._groupkeys, sort=self._sort)
TypeError: __init__() missing 1 required positional argument: 'name'

======================================================================
ERROR: test_dfs_groupby_param_by_date_any (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 78, in test_dfs_groupby_param_by_date_any
    a = self.odfs_csv.groupby('date').any()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 74, in gfunc
    return self._groupby_op(func, numeric_only)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\groupby.py", line 90, in _groupby_op
    return GroupByOpsMixin._groupby_op(self, *args, **kwargs)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 519, in _groupby_op
    return self._run_groupby_script(func, script, self._result_index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 489, in _run_groupby_script
    data = get_orca_obj_from_script(self._session, script, index)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 413, in get_orca_obj_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: The aggregated function in column any(tsymbol) doesn't have a map-reduce implementation and can't be applied to a partitioned or distributed table.

======================================================================
ERROR: test_dfs_groupby_param_by_date_bfill (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 86, in test_dfs_groupby_param_by_date_bfill
    assert_frame_equal(a.sort_index().reset_index(drop=True).iloc[:, 1:].to_pandas(),
AttributeError: 'DataFrameContextByExpression' object has no attribute 'sort_index'

======================================================================
ERROR: test_dfs_groupby_param_by_date_cumprod (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 117, in test_dfs_groupby_param_by_date_cumprod
    assert_frame_equal(a.iloc[0:50].reset_index(drop=True).to_pandas(), b.iloc[0:50].reset_index(drop=True), check_dtype=False,
AttributeError: 'DataFrameContextByExpression' object has no attribute 'iloc'

======================================================================
ERROR: test_dfs_groupby_param_by_date_ffill (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 130, in test_dfs_groupby_param_by_date_ffill
    assert_frame_equal(a.sort_index().reset_index(drop=True).iloc[:, 1:].to_pandas(),
AttributeError: 'DataFrameContextByExpression' object has no attribute 'sort_index'

======================================================================
ERROR: test_dfs_groupby_param_by_date_head (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 141, in test_dfs_groupby_param_by_date_head
    a = self.odfs_csv.groupby('date').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_dfs_groupby_param_by_date_median (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 161, in test_dfs_groupby_param_by_date_median
    a = self.odfs_csv.groupby('date').median()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 74, in gfunc
    return self._groupby_op(func, numeric_only)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\groupby.py", line 90, in _groupby_op
    return GroupByOpsMixin._groupby_op(self, *args, **kwargs)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 519, in _groupby_op
    return self._run_groupby_script(func, script, self._result_index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 489, in _run_groupby_script
    data = get_orca_obj_from_script(self._session, script, index)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 413, in get_orca_obj_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: The aggregated function in column med(tbool) doesn't have a map-reduce implementation and can't be applied to a partitioned or distributed table.

======================================================================
ERROR: test_dfs_groupby_param_by_date_ngroup (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 171, in test_dfs_groupby_param_by_date_ngroup
    a = self.odfs_csv.groupby('date').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_dfs_groupby_param_by_date_nth (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 176, in test_dfs_groupby_param_by_date_nth
    a = self.odfs_csv.groupby('date').nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_dfs_groupby_param_by_date_ohlc (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 182, in test_dfs_groupby_param_by_date_ohlc
    b = self.pdf_csv.groupby('date').ohlc()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1440, in ohlc
    return self._apply_to_column_groupbys(lambda x: x._cython_agg_general("ohlc"))
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\generic.py", line 1581, in _apply_to_column_groupbys
    axis=1,
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\reshape\concat.py", line 255, in concat
    sort=sort,
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\reshape\concat.py", line 301, in __init__
    objs = list(objs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\generic.py", line 1579, in <genexpr>
    (func(col_groupby) for _, col_groupby in self._iterate_column_groupbys()),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1440, in <lambda>
    return self._apply_to_column_groupbys(lambda x: x._cython_agg_general("ohlc"))
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 888, in _cython_agg_general
    raise DataError("No numeric types to aggregate")
pandas.core.base.DataError: No numeric types to aggregate

======================================================================
ERROR: test_dfs_groupby_param_by_date_rank (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 192, in test_dfs_groupby_param_by_date_rank
    b = self.pdf_csv.groupby('date').rank()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 2126, in rank
    axis=axis,
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 857, in _cython_transform
    result, names = self.grouper.transform(obj.values, how, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\ops.py", line 600, in transform
    return self._cython_operation("transform", values, how, axis, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\ops.py", line 560, in _cython_operation
    result, values, labels, func, is_numeric, is_datetimelike, **kwargs
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\ops.py", line 657, in _transform
    transform_func(result, values, comp_ids, ngroups, is_datetimelike, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\ops.py", line 437, in wrapper
    return f(afunc, *args, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\ops.py", line 389, in <lambda>
    kwargs.get("na_option", "keep"),
TypeError: 'NoneType' object is not callable

======================================================================
ERROR: test_dfs_groupby_param_by_date_sem (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 206, in test_dfs_groupby_param_by_date_sem
    a = self.odfs_csv.groupby('date').sem()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 74, in gfunc
    return self._groupby_op(func, numeric_only)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\groupby.py", line 90, in _groupby_op
    return GroupByOpsMixin._groupby_op(self, *args, **kwargs)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 519, in _groupby_op
    return self._run_groupby_script(func, script, self._result_index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 489, in _run_groupby_script
    data = get_orca_obj_from_script(self._session, script, index)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 413, in get_orca_obj_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: The aggregated function in column sem(tbool) doesn't have a map-reduce implementation and can't be applied to a partitioned or distributed table.

======================================================================
ERROR: test_dfs_groupby_param_by_date_tail (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 226, in test_dfs_groupby_param_by_date_tail
    a = self.odfs_csv.groupby('date').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_dfs_groupby_param_by_long_any (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 389, in test_dfs_groupby_param_by_long_any
    a = self.odfs_csv.groupby('tlong').any()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 74, in gfunc
    return self._groupby_op(func, numeric_only)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\groupby.py", line 90, in _groupby_op
    return GroupByOpsMixin._groupby_op(self, *args, **kwargs)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 519, in _groupby_op
    return self._run_groupby_script(func, script, self._result_index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 489, in _run_groupby_script
    data = get_orca_obj_from_script(self._session, script, index)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 413, in get_orca_obj_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: The aggregated function in column any(date) doesn't have a map-reduce implementation and can't be applied to a partitioned or distributed table.

======================================================================
ERROR: test_dfs_groupby_param_by_long_bfill (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 396, in test_dfs_groupby_param_by_long_bfill
    assert_frame_equal(a.sort_index().reset_index(drop=True).iloc[:, 1:].to_pandas(),
AttributeError: 'DataFrameContextByExpression' object has no attribute 'sort_index'

======================================================================
ERROR: test_dfs_groupby_param_by_long_cumprod (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 427, in test_dfs_groupby_param_by_long_cumprod
    assert_frame_equal(a.iloc[0:50].reset_index(drop=True).to_pandas(), b.iloc[0:50].reset_index(drop=True),
AttributeError: 'DataFrameContextByExpression' object has no attribute 'iloc'

======================================================================
ERROR: test_dfs_groupby_param_by_long_ffill (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 440, in test_dfs_groupby_param_by_long_ffill
    assert_frame_equal(a.sort_index().reset_index(drop=True).iloc[:, 1:].to_pandas(),
AttributeError: 'DataFrameContextByExpression' object has no attribute 'sort_index'

======================================================================
ERROR: test_dfs_groupby_param_by_long_head (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 450, in test_dfs_groupby_param_by_long_head
    a = self.odfs_csv.groupby('tlong').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_dfs_groupby_param_by_long_median (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 470, in test_dfs_groupby_param_by_long_median
    a = self.odfs_csv.groupby('tlong').median()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 74, in gfunc
    return self._groupby_op(func, numeric_only)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\groupby.py", line 90, in _groupby_op
    return GroupByOpsMixin._groupby_op(self, *args, **kwargs)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 519, in _groupby_op
    return self._run_groupby_script(func, script, self._result_index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 489, in _run_groupby_script
    data = get_orca_obj_from_script(self._session, script, index)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 413, in get_orca_obj_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: The aggregated function in column med(tbool) doesn't have a map-reduce implementation and can't be applied to a partitioned or distributed table.

======================================================================
ERROR: test_dfs_groupby_param_by_long_ngroup (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 480, in test_dfs_groupby_param_by_long_ngroup
    a = self.odfs_csv.groupby('tlong').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_dfs_groupby_param_by_long_nth (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 485, in test_dfs_groupby_param_by_long_nth
    a = self.odfs_csv.groupby('tlong').nth()
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_dfs_groupby_param_by_long_ohlc (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 490, in test_dfs_groupby_param_by_long_ohlc
    a = self.odfs_csv.groupby('tlong').ohlc(0)
TypeError: gfunc() takes 1 positional argument but 2 were given

======================================================================
ERROR: test_dfs_groupby_param_by_long_pct_change (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 506, in test_dfs_groupby_param_by_long_pct_change
    b = self.pdf_csv.drop(columns=["tbool", "tsymbol"]).groupby('tlong').pct_change()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 2365, in pct_change
    return (filled / shifted) - 1
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 1493, in f
    return self._combine_frame(other, pass_op, fill_value, level)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\frame.py", line 5371, in _combine_frame
    return ops.dispatch_to_series(this, other, _arith_op)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 596, in dispatch_to_series
    new_data = expressions.evaluate(column_op, str_rep, left, right)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\computation\expressions.py", line 221, in evaluate
    return _evaluate(op, op_str, a, b, **eval_kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\computation\expressions.py", line 127, in _evaluate_numexpr
    result = _evaluate_standard(op, op_str, a, b)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\computation\expressions.py", line 70, in _evaluate_standard
    return op(a, b)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 576, in column_op
    return {i: func(a.iloc[:, i], b.iloc[:, i]) for i in range(len(a.columns))}
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 576, in <dictcomp>
    return {i: func(a.iloc[:, i], b.iloc[:, i]) for i in range(len(a.columns))}
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\frame.py", line 5367, in _arith_op
    return func(left, right)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 992, in wrapper
    result = dispatch_to_index_op(op, left, right, pd.DatetimeIndex)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 630, in dispatch_to_index_op
    result = op(left_idx, right)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 196, in invalid_op
    "{typ}".format(name=name, typ=type(self).__name__)
TypeError: cannot perform __truediv__ with this index type: DatetimeIndex

======================================================================
ERROR: test_dfs_groupby_param_by_long_rank (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 501, in test_dfs_groupby_param_by_long_rank
    b = self.pdf_csv.groupby('tlong').rank()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 2126, in rank
    axis=axis,
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 857, in _cython_transform
    result, names = self.grouper.transform(obj.values, how, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\ops.py", line 600, in transform
    return self._cython_operation("transform", values, how, axis, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\ops.py", line 560, in _cython_operation
    result, values, labels, func, is_numeric, is_datetimelike, **kwargs
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\ops.py", line 657, in _transform
    transform_func(result, values, comp_ids, ngroups, is_datetimelike, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\ops.py", line 437, in wrapper
    return f(afunc, *args, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\ops.py", line 389, in <lambda>
    kwargs.get("na_option", "keep"),
TypeError: 'NoneType' object is not callable

======================================================================
ERROR: test_dfs_groupby_param_by_long_sem (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 515, in test_dfs_groupby_param_by_long_sem
    a = self.odfs_csv.groupby('tlong').sem()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 74, in gfunc
    return self._groupby_op(func, numeric_only)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\groupby.py", line 90, in _groupby_op
    return GroupByOpsMixin._groupby_op(self, *args, **kwargs)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 519, in _groupby_op
    return self._run_groupby_script(func, script, self._result_index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 489, in _run_groupby_script
    data = get_orca_obj_from_script(self._session, script, index)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 413, in get_orca_obj_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: The aggregated function in column sem(tbool) doesn't have a map-reduce implementation and can't be applied to a partitioned or distributed table.

======================================================================
ERROR: test_dfs_groupby_param_by_long_tail (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 535, in test_dfs_groupby_param_by_long_tail
    a = self.odfs_csv.groupby('tlong').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_any (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 236, in test_dfs_groupby_param_by_symbol_any
    a = self.odfs_csv.groupby('tsymbol').any()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 74, in gfunc
    return self._groupby_op(func, numeric_only)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\groupby.py", line 90, in _groupby_op
    return GroupByOpsMixin._groupby_op(self, *args, **kwargs)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 519, in _groupby_op
    return self._run_groupby_script(func, script, self._result_index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 489, in _run_groupby_script
    data = get_orca_obj_from_script(self._session, script, index)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 413, in get_orca_obj_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: The aggregated function in column any(date) doesn't have a map-reduce implementation and can't be applied to a partitioned or distributed table.

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_bfill (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 243, in test_dfs_groupby_param_by_symbol_bfill
    assert_frame_equal(a.sort_index().reset_index(drop=True).iloc[:, 1:].to_pandas(),
AttributeError: 'DataFrameContextByExpression' object has no attribute 'sort_index'

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_ffill (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 284, in test_dfs_groupby_param_by_symbol_ffill
    assert_frame_equal(a.sort_index().reset_index(drop=True).iloc[:, 1:].to_pandas(),
AttributeError: 'DataFrameContextByExpression' object has no attribute 'sort_index'

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_head (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 294, in test_dfs_groupby_param_by_symbol_head
    a = self.odfs_csv.groupby('tsymbol').head()
AttributeError: 'DataFrameGroupBy' object has no attribute 'head'

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_median (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 314, in test_dfs_groupby_param_by_symbol_median
    a = self.odfs_csv.groupby('tsymbol').median()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 74, in gfunc
    return self._groupby_op(func, numeric_only)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\groupby.py", line 90, in _groupby_op
    return GroupByOpsMixin._groupby_op(self, *args, **kwargs)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 519, in _groupby_op
    return self._run_groupby_script(func, script, self._result_index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 489, in _run_groupby_script
    data = get_orca_obj_from_script(self._session, script, index)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 413, in get_orca_obj_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: The aggregated function in column med(tbool) doesn't have a map-reduce implementation and can't be applied to a partitioned or distributed table.

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_ngroup (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 324, in test_dfs_groupby_param_by_symbol_ngroup
    a = self.odfs_csv.groupby('tsymbol').ngroup()
AttributeError: 'DataFrameGroupBy' object has no attribute 'ngroup'

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_nth (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 329, in test_dfs_groupby_param_by_symbol_nth
    a = self.odfs_csv.groupby('tsymbol').nth(0)
AttributeError: 'DataFrameGroupBy' object has no attribute 'nth'

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_ohlc (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 335, in test_dfs_groupby_param_by_symbol_ohlc
    b = self.pdf_csv.groupby('tsymbol').ohlc()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1440, in ohlc
    return self._apply_to_column_groupbys(lambda x: x._cython_agg_general("ohlc"))
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\generic.py", line 1581, in _apply_to_column_groupbys
    axis=1,
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\reshape\concat.py", line 255, in concat
    sort=sort,
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\reshape\concat.py", line 301, in __init__
    objs = list(objs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\generic.py", line 1579, in <genexpr>
    (func(col_groupby) for _, col_groupby in self._iterate_column_groupbys()),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1440, in <lambda>
    return self._apply_to_column_groupbys(lambda x: x._cython_agg_general("ohlc"))
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 888, in _cython_agg_general
    raise DataError("No numeric types to aggregate")
pandas.core.base.DataError: No numeric types to aggregate

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_pct_change (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 350, in test_dfs_groupby_param_by_symbol_pct_change
    b = self.pdf_csv.drop(columns=["tbool"]).groupby('tsymbol').pct_change()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 2365, in pct_change
    return (filled / shifted) - 1
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 1493, in f
    return self._combine_frame(other, pass_op, fill_value, level)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\frame.py", line 5371, in _combine_frame
    return ops.dispatch_to_series(this, other, _arith_op)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 596, in dispatch_to_series
    new_data = expressions.evaluate(column_op, str_rep, left, right)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\computation\expressions.py", line 221, in evaluate
    return _evaluate(op, op_str, a, b, **eval_kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\computation\expressions.py", line 127, in _evaluate_numexpr
    result = _evaluate_standard(op, op_str, a, b)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\computation\expressions.py", line 70, in _evaluate_standard
    return op(a, b)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 576, in column_op
    return {i: func(a.iloc[:, i], b.iloc[:, i]) for i in range(len(a.columns))}
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 576, in <dictcomp>
    return {i: func(a.iloc[:, i], b.iloc[:, i]) for i in range(len(a.columns))}
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\frame.py", line 5367, in _arith_op
    return func(left, right)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 992, in wrapper
    result = dispatch_to_index_op(op, left, right, pd.DatetimeIndex)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 630, in dispatch_to_index_op
    result = op(left_idx, right)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\ops\__init__.py", line 196, in invalid_op
    "{typ}".format(name=name, typ=type(self).__name__)
TypeError: cannot perform __truediv__ with this index type: DatetimeIndex

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_sem (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 359, in test_dfs_groupby_param_by_symbol_sem
    a = self.odfs_csv.groupby('tsymbol').sem()
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 74, in gfunc
    return self._groupby_op(func, numeric_only)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\groupby.py", line 90, in _groupby_op
    return GroupByOpsMixin._groupby_op(self, *args, **kwargs)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 519, in _groupby_op
    return self._run_groupby_script(func, script, self._result_index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 489, in _run_groupby_script
    data = get_orca_obj_from_script(self._session, script, index)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 413, in get_orca_obj_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: The aggregated function in column sem(tbool) doesn't have a map-reduce implementation and can't be applied to a partitioned or distributed table.

======================================================================
ERROR: test_dfs_groupby_param_by_symbol_tail (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 379, in test_dfs_groupby_param_by_symbol_tail
    a = self.odfs_csv.groupby('tsymbol').tail()
AttributeError: 'DataFrameGroupBy' object has no attribute 'tail'

======================================================================
ERROR: test_index (test_index.IndexTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_index.py", line 17, in test_index
    self.assertEqual(pi, oi)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\unittest\case.py", line 829, in _baseAssertEqual
    if not first == second:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

======================================================================
ERROR: test_index_properties_T (test_index.IndexTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_index.py", line 187, in test_index_properties_T
    self.assertEqual(pi.T, oi.T)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\unittest\case.py", line 829, in _baseAssertEqual
    if not first == second:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

======================================================================
ERROR: test_index_properties_empty (test_index.IndexTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_index.py", line 170, in test_index_properties_empty
    self.assertEqual(pi.empty, oi.empty)
AttributeError: 'Index' object has no attribute 'empty'

======================================================================
ERROR: test_index_properties_has_duplicates (test_index.IndexTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_index.py", line 51, in test_index_properties_has_duplicates
    self.assertEqual(pi.has_duplicates, oi.has_duplicates)
AttributeError: 'Index' object has no attribute 'has_duplicates'

======================================================================
ERROR: test_index_properties_inferred_type (test_index.IndexTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_index.py", line 106, in test_index_properties_inferred_type
    self.assertEqual(pi.inferred_type, oi.inferred_type)
AttributeError: 'Index' object has no attribute 'inferred_type'

======================================================================
ERROR: test_index_properties_is_hasnans (test_index.IndexTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_index.py", line 60, in test_index_properties_is_hasnans
    self.assertEqual(pi.is_hasnans, oi.hasnans)
AttributeError: 'Int64Index' object has no attribute 'is_hasnans'

======================================================================
ERROR: test_index_properties_memory_usage (test_index.IndexTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_index.py", line 192, in test_index_properties_memory_usage
    self.assertEqual(pi.memory_usage, oi.memory_usage)
AttributeError: 'Index' object has no attribute 'memory_usage'

======================================================================
ERROR: test_index_properties_names (test_index.IndexTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_index.py", line 150, in test_index_properties_names
    self.assertEqual(pi.names, oi.names)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\indexes.py", line 261, in names
    return self._names
AttributeError: 'Index' object has no attribute '_names'

======================================================================
ERROR: test_index_properties_values (test_index.IndexTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_index.py", line 22, in test_index_properties_values
    self.assertEqual(pi.values, oi.values)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\unittest\case.py", line 829, in _baseAssertEqual
    if not first == second:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

======================================================================
ERROR: test_indexing_dataframe_iloc_set (test_indexing.IndexingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_indexing.py", line 507, in test_indexing_dataframe_iloc_set
    odf.iloc[0] = orca.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\indexing.py", line 610, in __setitem__
    value_list.append(value[rows[i]])
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\series.py", line 73, in __getitem__
    return self.iloc[key]
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\indexing.py", line 565, in __getitem__
    rows_cond, _ = self._get_rows_cond(rows_sel, ref)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\indexing.py", line 499, in _get_rows_cond
    raise KeyError(rows_sel)
KeyError: 'a'

======================================================================
ERROR: test_indexing_dataframe_loc_set (test_indexing.IndexingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_indexing.py", line 183, in test_indexing_dataframe_loc_set
    odf.loc['cobra'] = orca.Series([10, 11], index=['max_speed', 'shield'])
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\indexing.py", line 294, in __setitem__
    value_list.append(value[rows[i]])
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\series.py", line 73, in __getitem__
    return self.iloc[key]
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\indexing.py", line 565, in __getitem__
    rows_cond, _ = self._get_rows_cond(rows_sel, ref)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\indexing.py", line 499, in _get_rows_cond
    raise KeyError(rows_sel)
KeyError: 'max_speed'

======================================================================
ERROR: test_read (test_io.InputOutputTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\indexes\base.py", line 2897, in get_loc
    return self._engine.get_loc(key)
  File "pandas\_libs\index.pyx", line 107, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 131, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 1607, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 1614, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_io.py", line 157, in test_read
    assert_equal(pd.read_html(file)[0], orca.read_html(file)[0])
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\generic.py", line 106, in read_html
    return DataFrame(pdf, session=session)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 69, in __init__
    columns=pd_columns, dtype=dtype, copy=False)    # TODO: copy = True or False ?
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\frame.py", line 464, in __init__
    mgr = init_ndarray(data, index, columns, dtype=dtype, copy=copy)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 171, in init_ndarray
    values = prep_ndarray(values, copy=copy)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 276, in prep_ndarray
    values = np.array([convert(v) for v in values])
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\frame.py", line 2980, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\indexes\base.py", line 2899, in get_loc
    return self._engine.get_loc(self._maybe_cast_indexer(key))
  File "pandas\_libs\index.pyx", line 107, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 131, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 1607, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 1614, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 0

======================================================================
ERROR: test_join_from_csv_index_param_lsuffix_paran_sort (test_join.JoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join.py", line 172, in test_join_from_csv_index_param_lsuffix_paran_sort
    rsuffix='_other', sort=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 414, in merge
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_join_from_csv_param_sort (test_join.JoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join.py", line 109, in test_join_from_csv_param_sort
    odf_join = orca_ll.join(self.odf_csv_right, lsuffix='_caller', rsuffix='_other', sort=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 414, in merge
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_join_from_dataframe_index_param_sort (test_join.JoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join.py", line 281, in test_join_from_dataframe_index_param_sort
    odf_join = orca_left.join(orca_right, sort=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 414, in merge
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_join_from_dataframe_sort (test_join.JoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join.py", line 235, in test_join_from_dataframe_sort
    odf_join = odf_ll.join(odf_other, lsuffix='_caller', rsuffix='_other', sort=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 414, in merge
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_join_from_dfs_index_param_lsuffix_paran_sort (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 197, in test_join_from_dfs_index_param_lsuffix_paran_sort
    odfs_join = self.odfs_csv_left_index.join(self.odfs_csv_right_index, lsuffix='_caller', rsuffix='_other', sort=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 414, in merge
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_join_from_dfs_index_with_csv_right_param_lsuffix_paran_sort (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 268, in test_join_from_dfs_index_with_csv_right_param_lsuffix_paran_sort
    odfs_join = self.odfs_csv_left_index.join(self.odf_csv_right_index, lsuffix='_caller', rsuffix='_other', sort=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 414, in merge
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_join_from_dfs_param_lsuffix_paran_rsuffix (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 114, in test_join_from_dfs_param_lsuffix_paran_rsuffix
    odfs_join = self.odfs_csv_left.join(self.odfs_csv_right, lsuffix='_caller', rsuffix='_other')
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 504, in merge
    return DataFrame._get_from_script(self._session, script, index_map=index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\base.py", line 115, in _get_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: When joining two partitioned tables, the partitioning column(s) must be the same as or a subset of the joining column(s).

======================================================================
ERROR: test_join_from_dfs_param_sort (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 156, in test_join_from_dfs_param_sort
    odfs_join = self.odfs_csv_left.join(self.odfs_csv_right, lsuffix='_caller', rsuffix='_other', sort=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 414, in merge
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_join_from_dfs_with_csv_left_index_param_lsuffix_paran_how (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\indexes\base.py", line 2897, in get_loc
    return self._engine.get_loc(key)
  File "pandas\_libs\index.pyx", line 107, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 131, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 1607, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 1614, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'TICKER_caller'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 321, in test_join_from_dfs_with_csv_left_index_param_lsuffix_paran_how
    pdf_join.loc[:, 'TICKER_caller'].fillna("", inplace=True)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\indexing.py", line 1418, in __getitem__
    return self._getitem_tuple(key)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\indexing.py", line 805, in _getitem_tuple
    return self._getitem_lowerdim(tup)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\indexing.py", line 929, in _getitem_lowerdim
    section = self._getitem_axis(key, axis=i)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\indexing.py", line 1850, in _getitem_axis
    return self._get_label(key, axis=axis)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\indexing.py", line 160, in _get_label
    return self.obj._xs(label, axis=axis)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\generic.py", line 3729, in xs
    return self[key]
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\frame.py", line 2980, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\indexes\base.py", line 2899, in get_loc
    return self._engine.get_loc(self._maybe_cast_indexer(key))
  File "pandas\_libs\index.pyx", line 107, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 131, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 1607, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 1614, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'TICKER_caller'

======================================================================
ERROR: test_join_from_dfs_with_csv_left_index_param_lsuffix_paran_rsuffix (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 306, in test_join_from_dfs_with_csv_left_index_param_lsuffix_paran_rsuffix
    odfs_join = self.odf_csv_left_index.join(self.odfs_csv_right_index, lsuffix='_caller', rsuffix='_other')
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 504, in merge
    return DataFrame._get_from_script(self._session, script, index_map=index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\base.py", line 115, in _get_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: A regular left table can't perform left join (lj), sorted left join (slj), full join (fj), asof join (aj), or window join (pwj, wj) with another distributed or segmented table.

======================================================================
ERROR: test_join_from_dfs_with_csv_left_index_param_lsuffix_paran_sort (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 337, in test_join_from_dfs_with_csv_left_index_param_lsuffix_paran_sort
    odfs_join = self.odf_csv_left_index.join(self.odfs_csv_right_index, lsuffix='_caller', rsuffix='_other', sort=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 414, in merge
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_join_from_dfs_with_csv_left_index_param_on (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 311, in test_join_from_dfs_with_csv_left_index_param_on
    odfs_join = self.odf_csv_left_index.join(self.odfs_csv_right_index, on='date', lsuffix='_caller', rsuffix='_other')
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 437, in merge
    left_join_columns, left_data_columns = check_key_existence(left_on, left_data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['date']

======================================================================
ERROR: test_join_from_dfs_with_csv_left_param_how (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 286, in test_join_from_dfs_with_csv_left_param_how
    odfs_join = self.odf_csv_left.join(self.odfs_csv_right, how="right", lsuffix='_caller', rsuffix='_other')
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 504, in merge
    return DataFrame._get_from_script(self._session, script, index_map=index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\base.py", line 115, in _get_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: More than one column has the duplicated name: TICKER

======================================================================
ERROR: test_join_from_dfs_with_csv_left_param_lsuffix_paran_rsuffix (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 273, in test_join_from_dfs_with_csv_left_param_lsuffix_paran_rsuffix
    odfs_join = self.odf_csv_left.join(self.odfs_csv_right, lsuffix='_caller', rsuffix='_other')
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 504, in merge
    return DataFrame._get_from_script(self._session, script, index_map=index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\base.py", line 115, in _get_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: A regular left table can't perform left join (lj), sorted left join (slj), full join (fj), asof join (aj), or window join (pwj, wj) with another distributed or segmented table.

======================================================================
ERROR: test_join_from_dfs_with_csv_left_param_on (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 278, in test_join_from_dfs_with_csv_left_param_on
    odfs_join = self.odf_csv_left.join(self.odfs_csv_right, on='date', lsuffix='_caller', rsuffix='_other')
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 504, in merge
    return DataFrame._get_from_script(self._session, script, index_map=index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\base.py", line 115, in _get_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: More than one column has the duplicated name: date

======================================================================
ERROR: test_join_from_dfs_with_csv_left_param_sort (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 301, in test_join_from_dfs_with_csv_left_param_sort
    odfs_join = self.odf_csv_left.join(self.odfs_csv_right, lsuffix='_caller', rsuffix='_other', sort=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 414, in merge
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_join_from_dfs_with_csv_right_param_how (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 215, in test_join_from_dfs_with_csv_right_param_how
    odfs_join = self.odfs_csv_left.join(self.odf_csv_right, how="right", lsuffix='_caller', rsuffix='_other')
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 444, in merge
    raise ValueError("len(right_on) must equal len(left_on)")
ValueError: len(right_on) must equal len(left_on)

======================================================================
ERROR: test_join_from_dfs_with_csv_right_param_lsuffix_paran_rsuffix (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 202, in test_join_from_dfs_with_csv_right_param_lsuffix_paran_rsuffix
    odfs_join = self.odfs_csv_left.join(self.odf_csv_right, lsuffix='_caller', rsuffix='_other')
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 444, in merge
    raise ValueError("len(right_on) must equal len(left_on)")
ValueError: len(right_on) must equal len(left_on)

======================================================================
ERROR: test_join_from_dfs_with_csv_right_param_on (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 207, in test_join_from_dfs_with_csv_right_param_on
    odfs_join = self.odfs_csv_left.join(self.odf_csv_right, on='date', lsuffix='_caller', rsuffix='_other')
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 504, in merge
    return DataFrame._get_from_script(self._session, script, index_map=index_map)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\base.py", line 115, in _get_from_script
    var = _ConstantSP.run_script(session, script)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\internal.py", line 96, in run_script
    session.run(f"&{var_name} = ({script})")
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\dolphindb\session.py", line 67, in run
    return self.cpp.run(script, *args)
RuntimeError: <Server Exception> in run: More than one column has the duplicated name: date

======================================================================
ERROR: test_join_from_dfs_with_csv_right_param_sort (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 230, in test_join_from_dfs_with_csv_right_param_sort
    odfs_join = self.odfs_csv_left.join(self.odf_csv_right, lsuffix='_caller', rsuffix='_other', sort=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 407, in join
    sort=sort)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 414, in merge
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_merge_from_csv_index_param_how (test_merge.MergeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 138, in test_merge_from_csv_index_param_how
    odf_merge = self.odf_csv_left_index.merge(self.odf_csv_right_index, how="left", on="type", left_index=True, right_index=True)
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 57, in odf_csv_left_index
    return Csv.odf_csv_left.set_index("type")
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 786, in set_index
    keys, dropped = check_key_existence(keys, data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['type']

======================================================================
ERROR: test_merge_from_csv_index_param_on (test_merge.MergeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 128, in test_merge_from_csv_index_param_on
    odf_merge = self.odf_csv_left.merge(self.odf_csv_right_index, left_on="type", right_index = True)
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 61, in odf_csv_right_index
    return Csv.odf_csv_right.set_index("type")
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 786, in set_index
    keys, dropped = check_key_existence(keys, data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['type']

======================================================================
ERROR: test_merge_from_csv_index_param_suffix (test_merge.MergeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 123, in test_merge_from_csv_index_param_suffix
    odf_merge = self.odf_csv_left_index.merge(self.odf_csv_right_index, left_index=True, right_index=True, suffixes=('_left', '_right'))
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 57, in odf_csv_left_index
    return Csv.odf_csv_left.set_index("type")
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 786, in set_index
    keys, dropped = check_key_existence(keys, data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['type']

======================================================================
ERROR: test_merge_from_csv_param_how (test_merge.MergeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 88, in test_merge_from_csv_param_how
    odf_merge = self.odf_csv_left.merge(self.odf_csv_right, how="left", on="type")
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 431, in merge
    _, left_data_columns = check_key_existence(left_join_columns, left_data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['type']

======================================================================
ERROR: test_merge_from_csv_param_index (test_merge.MergeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 117, in test_merge_from_csv_param_index
    odf_merge = self.odf_csv_left_index.merge(self.odf_csv_right_index, left_index=True, right_index=True)
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 57, in odf_csv_left_index
    return Csv.odf_csv_left.set_index("type")
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 786, in set_index
    keys, dropped = check_key_existence(keys, data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['type']

======================================================================
ERROR: test_merge_from_csv_param_leftonrighton (test_merge.MergeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 112, in test_merge_from_csv_param_leftonrighton
    odf_merge = self.odf_csv_left.merge(self.odf_csv_right, left_on="type", right_on="type")
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 437, in merge
    left_join_columns, left_data_columns = check_key_existence(left_on, left_data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['type']

======================================================================
ERROR: test_merge_from_csv_param_on (test_merge.MergeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 107, in test_merge_from_csv_param_on
    odf_merge = self.odf_csv_left.merge(self.odf_csv_right, on="type")
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 431, in merge
    _, left_data_columns = check_key_existence(left_join_columns, left_data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['type']

======================================================================
ERROR: test_merge_from_csv_param_suffix (test_merge.MergeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 82, in test_merge_from_csv_param_suffix
    odf_merge = self.odf_csv_left.merge(self.odf_csv_right, on="type",suffixes=('_left', '_right'))
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 431, in merge
    _, left_data_columns = check_key_existence(left_join_columns, left_data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['type']

======================================================================
ERROR: setUpClass (test_orca.DataFrameTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_orca.py", line 97, in setUpClass
    Csv.odf_disk = _create_odf_disk(data)
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_orca.py", line 50, in _create_odf_disk
    db.loadTextEx(`USPrices,`date, '{data}' ,, tt)""".format(WORK_DIR=WORK_DIR, data=data)
NameError: name 'WORK_DIR' is not defined

======================================================================
ERROR: test_plot_area (test_plotting.PLottingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_plotting.py", line 52, in test_plot_area
    self.odf_series_plot.plot.area(x='date', y='BID')
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_core.py", line 1308, in area
    return self(kind="area", x=x, y=y, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_core.py", line 794, in __call__
    return plot_backend.plot(data, kind=kind, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\__init__.py", line 62, in plot
    plot_obj.generate()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\core.py", line 281, in generate
    self._make_plot()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\core.py", line 1084, in _make_plot
    left, right = _get_xlim(lines)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\tools.py", line 362, in _get_xlim
    left = min(np.nanmin(x), left)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\lib\nanfunctions.py", line 292, in nanmin
    res = np.fmin.reduce(a, axis=axis, out=out, **kwargs)
ValueError: zero-size array to reduction operation fmin which has no identity

======================================================================
ERROR: test_plot_line (test_plotting.PLottingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_plotting.py", line 123, in test_plot_line
    self.odf_series_plot.plot.line(x='date', y='BID')
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_core.py", line 863, in line
    return self(kind="line", x=x, y=y, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_core.py", line 794, in __call__
    return plot_backend.plot(data, kind=kind, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\__init__.py", line 62, in plot
    plot_obj.generate()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\core.py", line 287, in generate
    self._post_plot_logic_common(ax, self.data)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\core.py", line 441, in _post_plot_logic_common
    self._apply_axis_properties(ax.xaxis, rot=self.rot, fontsize=self.fontsize)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\core.py", line 525, in _apply_axis_properties
    labels = axis.get_majorticklabels() + axis.get_minorticklabels()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\axis.py", line 1253, in get_majorticklabels
    ticks = self.get_major_ticks()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\axis.py", line 1408, in get_major_ticks
    numticks = len(self.get_majorticklocs())
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\axis.py", line 1325, in get_majorticklocs
    return self.major.locator()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\dates.py", line 1435, in __call__
    return self._locator()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\dates.py", line 1614, in __call__
    return self.tick_values(dmin, dmax)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\dates.py", line 1620, in tick_values
    vmin = vmin.replace(year=ymin, **self.replaced)
ValueError: year 0 is out of range

======================================================================
ERROR: test_plot_area (test_plotting_partition.DfsPLottingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_plotting_partition.py", line 71, in test_plot_area
    self.pdf_series_plot.plot.area(x='date', y='BID')
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_core.py", line 1308, in area
    return self(kind="area", x=x, y=y, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_core.py", line 794, in __call__
    return plot_backend.plot(data, kind=kind, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\__init__.py", line 62, in plot
    plot_obj.generate()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\core.py", line 281, in generate
    self._make_plot()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\core.py", line 1084, in _make_plot
    left, right = _get_xlim(lines)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_matplotlib\tools.py", line 362, in _get_xlim
    left = min(np.nanmin(x), left)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\lib\nanfunctions.py", line 292, in nanmin
    res = np.fmin.reduce(a, axis=axis, out=out, **kwargs)
ValueError: zero-size array to reduction operation fmin which has no identity

======================================================================
ERROR: test_from_pandas_dataframe_resample_param_rule_monthbegin_param_on_month_std (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 1255, in test_from_pandas_dataframe_resample_param_rule_monthbegin_param_on_month_std
    pdf = self.pdf
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\resample.py", line 838, in std
    return self._downsample("std", ddof=ddof)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\resample.py", line 1070, in _downsample
    result = obj.groupby(self.grouper, axis=self.axis).aggregate(how, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\generic.py", line 1455, in aggregate
    return super().aggregate(arg, *args, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\generic.py", line 229, in aggregate
    result, how = self._aggregate(func, _level=_level, *args, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\base.py", line 356, in _aggregate
    return self._try_aggregate_string_function(arg, *args, **kwargs), None
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\base.py", line 305, in _try_aggregate_string_function
    return f(*args, **kwargs)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\groupby\groupby.py", line 1266, in std
    return np.sqrt(self.var(ddof=ddof, **kwargs))
AttributeError: 'float' object has no attribute 'sqrt'

======================================================================
ERROR: test_from_pandas_dataframe_resample_param_rule_second_param_on_second_count (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 2968, in test_from_pandas_dataframe_resample_param_rule_second_param_on_second_count
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 1106, in resample
    return klass(self._session, internal, self._index, rule, on, level, self._where_expr, self._name)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\resample.py", line 60, in __init__
    check_key_existence(on, self._data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['seconD']

======================================================================
ERROR: test_from_pandas_dataframe_resample_param_rule_second_param_on_second_max (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3003, in test_from_pandas_dataframe_resample_param_rule_second_param_on_second_max
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 1106, in resample
    return klass(self._session, internal, self._index, rule, on, level, self._where_expr, self._name)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\resample.py", line 60, in __init__
    check_key_existence(on, self._data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['seconD']

======================================================================
ERROR: test_from_pandas_dataframe_resample_param_rule_second_param_on_second_mean (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3035, in test_from_pandas_dataframe_resample_param_rule_second_param_on_second_mean
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 1106, in resample
    return klass(self._session, internal, self._index, rule, on, level, self._where_expr, self._name)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\resample.py", line 60, in __init__
    check_key_existence(on, self._data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['seconD']

======================================================================
ERROR: test_from_pandas_dataframe_resample_param_rule_second_param_on_second_min (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3067, in test_from_pandas_dataframe_resample_param_rule_second_param_on_second_min
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 1106, in resample
    return klass(self._session, internal, self._index, rule, on, level, self._where_expr, self._name)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\resample.py", line 60, in __init__
    check_key_existence(on, self._data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['seconD']

======================================================================
ERROR: test_from_pandas_dataframe_resample_param_rule_second_param_on_second_std (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3099, in test_from_pandas_dataframe_resample_param_rule_second_param_on_second_std
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 1106, in resample
    return klass(self._session, internal, self._index, rule, on, level, self._where_expr, self._name)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\resample.py", line 60, in __init__
    check_key_existence(on, self._data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['seconD']

======================================================================
ERROR: test_from_pandas_dataframe_resample_param_rule_second_param_on_second_sum (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3133, in test_from_pandas_dataframe_resample_param_rule_second_param_on_second_sum
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 1106, in resample
    return klass(self._session, internal, self._index, rule, on, level, self._where_expr, self._name)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\resample.py", line 60, in __init__
    check_key_existence(on, self._data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['seconD']

======================================================================
ERROR: test_from_pandas_dataframe_resample_param_rule_second_param_on_second_var (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3165, in test_from_pandas_dataframe_resample_param_rule_second_param_on_second_var
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 1106, in resample
    return klass(self._session, internal, self._index, rule, on, level, self._where_expr, self._name)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\resample.py", line 60, in __init__
    check_key_existence(on, self._data_columns)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\utils.py", line 464, in check_key_existence
    raise KeyError(non_exist_keys)
KeyError: ['seconD']

======================================================================
ERROR: test_series_add_prefix (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1730, in test_series_add_prefix
    self.assertEqual(repr(ps.add_prefix('item_')), repr(os.add_prefix('item_')))
AttributeError: 'Series' object has no attribute 'add_prefix'

======================================================================
ERROR: test_series_add_suffix (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1735, in test_series_add_suffix
    self.assertEqual(repr(ps.add_suffix('_item')), repr(os.add_suffix('_item')))
AttributeError: 'Series' object has no attribute 'add_suffix'

======================================================================
ERROR: test_series_append (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1697, in test_series_append
    os1 = os1.append(os2)
AttributeError: 'Series' object has no attribute 'append'

======================================================================
ERROR: test_series_attributes_hasnans (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 154, in test_series_attributes_hasnans
    self.assertEqual(ps.hasnans,os.hasnans)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\series.py", line 289, in hasnans
    return StatOpsMixin._unary_agg_op(self, "hasNull", None, False)
TypeError: _unary_agg_op() missing 1 required positional argument: 'numeric_only'

======================================================================
ERROR: test_series_dropna (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1557, in test_series_dropna
    os.dropna(inplace=True)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\operator.py", line 968, in dropna
    raise NotImplementedError()
NotImplementedError

======================================================================
ERROR: test_series_is_unique (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1676, in test_series_is_unique
    self.assertEqual(False, oser.is_unique)
  File "C:\Users\ywang\Documents\GitHub\orca\orca\core\frame.py", line 121, in __getattr__
    f"'{self.__class__.__name__}' object has no attribute '{key}'")
AttributeError: 'DataFrame' object has no attribute 'is_unique'

======================================================================
ERROR: test_series_nlargest (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1589, in test_series_nlargest
    self.assertEqual(os.nlargest(n=3), ps.nlargest(n=3))
AttributeError: 'Series' object has no attribute 'nlargest'

======================================================================
ERROR: test_series_nsmallest (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1582, in test_series_nsmallest
    self.assertEqual(os.nsmallest(n=3), ps.nsmallest(n=3))
AttributeError: 'Series' object has no attribute 'nsmallest'

======================================================================
ERROR: test_series_nunique (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1570, in test_series_nunique
    nunique_result = os.nunique(dropna=False)
TypeError: ufunc() got an unexpected keyword argument 'dropna'

======================================================================
FAIL: test_dataframe_binary_operator_function_add_list (test_dataframe.DataFrameTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_dataframe.py", line 234, in test_dataframe_binary_operator_function_add_list
    assert_frame_equal(pre, ore)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (66.66667 %)
[left]:  [1, 5, 7]
[right]: [1, 4, 5]

======================================================================
FAIL: test_dataframe_binary_operator_function_sub_list (test_dataframe.DataFrameTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_dataframe.py", line 289, in test_dataframe_binary_operator_function_sub_list
    assert_frame_equal(pre, ore)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (66.66667 %)
[left]:  [-1, 1, 1]
[right]: [-1, 2, 3]

======================================================================
FAIL: test_dataframe_computations (test_dataframe.DataFrameTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_dataframe.py", line 509, in test_dataframe_computations
    assert_series_equal(self.pdf_csv.mode(), self.odf_csv.mode().to_pandas())
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1122, in assert_series_equal
    _check_isinstance(left, right, Series)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 391, in _check_isinstance
    err_msg.format(name=cls_name, exp_type=cls, act_type=type(left))
AssertionError: Series Expected type <class 'pandas.core.series.Series'>, found <class 'pandas.core.frame.DataFrame'> instead

======================================================================
FAIL: test_reset_index_with_multiindex_columns (test_dataframe.DataFrameTest)
----------------------------------------------------------------------
IndexError: Too many levels: Index has only 2, not 3

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_dataframe.py", line 696, in test_reset_index_with_multiindex_columns
    odf.reset_index(col_level=2)
AssertionError: "Index has only 2 levels, not 3" does not match "Too many levels: Index has only 2, not 3"

======================================================================
FAIL: test_from_import_groupby_param_by_compo_date_symbol_prod (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1474, in test_from_import_groupby_param_by_compo_date_symbol_prod
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (100.0 %)
[left]:  [9136790924020416512, 4342424971801264128, -660435282048155648, 70022162247843840, 737490974861557760, 2274071989801975808, 5482129666614231040, -3586145627311177728, 6803364912573710336, -6534670462004232192, 7234427204231757824, -2904967651683991552, 2085857135380398080, -3765201695942115328, -2278767271735197696, -2731835407873343488, -5286452592536715264, 2253418972197158912, 4943376687959113728, 1132711016122810368, 2352761465772965888, -5147619028709933056, -2712615027251347456, -4518025109596274688, -4974184906564304896, -6221943965965877248, -4714957594827948032, -7399142996756660224, 4410327477621096448, 958526550972563456, 9169990812182773760, 1423387756588171264, -4599740981503852544, -6231165581988986880, -7658465508415242240, 3600073360768761856, -9184678917556142080, -7077237570745401344, 9114514548273971200, -4780155153258905600, -6350504128674267136, -8517358678655893504, -8089298935418978304, 273200676914331648, 6549650093965836288, -3527659040242925568, -4165515754019749888, 3844444702677925888, -7444373718795550720, 2740620409962496000, 4029410181697765376, -66781959484080128, -5567204326114590720, 97865094357057536, -6521995036201058304, -4965482052796809216, 7026629686018441216, -7868051141467570176, 6584852097114570752, -55130617165119488, -4480294330422788096, -7913650991758311424, 6091085158050955264, -1131412768139247616, 7033408313271779328, 6647749544434466816, 3666903018167336960, 4380895436521603072, 3547200732289564672, -8979016921403883520, 7322720462070349824, 781601282946236416, -8077371764735737856, -5576954717308715008, -7102400414987845632, -2738205540030349312, 2527015086764589056, -6042728250166214656, 285838861578272768, 5196581360888709120, 5702833247946276864, -8408291188583694336, -6924682193941823488, 3810168819539771392, 1576756635186757632, -976313909038809088, -8041027138018607104, -2139470945902919680, 7061442179813605376, 5533364836718608384, -6716227638988111872, -3239488125503799296, 118696452892393472, -256904432563519488, -5523331673365151744, 3226277831840890880, 3762380490739286016, 8258214105656066048, -1757145586134941696, 8214271237659295744, ...]
[right]: [1.2239864635668138e+37, 2.823438486547961e+35, 2.1857295560579956e+34, 4.426481550181486e+34, 8.264523248640998e+34, 1.4595024700621218e+35, 6.683204912954629e+33, 3.2473885236134307e+46, 5.1118977129319364e+48, 5.6638742071423665e+48, 2.200769094272687e+46, 2.4273684955332774e+46, 2.675970069423403e+46, 2.9485830048088474e+46, 9.12315038547969e+50, 9.657495403472286e+50, 1.0221464151207215e+51, 3.0827329595997184e+53, 3.273141347876585e+53, 8.137492129279456e+50, 8.616951813709737e+50, 7.445272760356565e+53, 7.753715538792984e+53, 8.07426812534887e+53, 8.407379851468372e+53, 8.753515756696756e+53, 3.8913180835239466e+56, 4.060351218567646e+56, 7.859108642500543e+58, 8.122652569503274e+58, 1.1806748137817743e+56, 1.2184267816589822e+56, 1.2573234335964779e+56, 1.2973975916146088e+56, 1.338682964966786e+56, 7.212791031434502e+57, 7.399903604222898e+57, 5.397642448244753e+60, 5.5450916498670704e+60, 6.678043858937396e+57, 6.851962687220136e+57, 7.03017827081498e+57, 1.9543332403808407e+59, 1.9972258413352857e+59, 2.0410116851691754e+59, 2.0857083736441136e+59, 1.8180277618622501e+62, 1.8599320085800525e+62, 1.9123166021091954e+59, 3.764273663053835e+63, 3.376647925587247e+60, 3.440812360904673e+60, 3.506133923827008e+60, 3.5726323632220366e+60, 3.640327745963479e+60, 3.6906942594368065e+63, 4.4389043837918915e+61, 5.131244165223249e+64, 5.2213758508901956e+64, 4.154037514657109e+61, 4.2235800424798127e+61, 4.294227577827565e+61, 4.3659967399102124e+61, 3.9771259139968855e+62, 4.03653845636789e+62, 4.096793491045485e+62, 5.317957076408992e+65, 5.401441813774825e+65, 3.8607837759317833e+62, 3.9185446963961407e+62, 2.868261740556637e+63, 2.907050123495039e+63, 2.946336470445867e+63, 2.9861268334682356e+63, 3.0264273340397294e+63, 4.358553956767301e+66, 4.42040585834437e+66, 2.948734588507175e+67, 2.986913629754136e+67, 1.7745238433032656e+64, 1.796417738595254e+64, 1.818568085915958e+64, 1.840977729246022e+64, 1.8636495423335812e+64, 9.751269659914256e+64, 9.861696718734943e+64, 1.7004495366070676e+68, 1.7206928884178305e+68, 9.426993064937121e+64, 9.533929633768228e+64, 9.642017917349256e+64, 4.448865433439506e+65, 4.495544082961329e+65, 4.542687754047839e+65, 4.590300833108142e+65, 8.567102166136175e+68, 8.661489063412486e+68, 4.402647457804362e+65, 3.884009021217702e+69, 1.8413012769388754e+66, ...]

======================================================================
FAIL: test_from_import_groupby_param_by_compo_date_symbol_rank (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1483, in test_from_import_groupby_param_by_compo_date_symbol_rank
    check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 1] are different

DataFrame.iloc[:, 1] values are different (100.0 %)
[left]:  [12, 1, 1, 10, 1, 10, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, 11, 1, 11, 1, 11, 12, 1, ...]
[right]: [17.0, 15.5, 5.5, 15.5, 5.5, 15.5, 15.5, 15.5, 15.5, 5.5, 15.5, 5.5, 15.5, 5.5, 5.5, 15.5, 5.5, 15.5, 5.5, 15.5, 5.5, 15.5, 5.5, 15.5, 5.5, 16.5, 5.5, 15.5, 5.5, 15.5, 5.5, 15.5, 5.5, 15.5, 15.5, 5.5, 15.5, 5.5, 15.5, 5.5, 5.5, 5.5, 16.5, 5.5, 15.5, 5.5, 15.5, 5.5, 15.5, 5.5, 15.5, 5.5, 15.5, 15.5, 15.5, 15.5, 5.5, 5.5, 15.5, 5.5, 15.5, 5.5, 5.5, 15.5, 5.5, 15.5, 5.5, 15.5, 16.5, 5.5, 15.5, 5.5, 15.5, 5.5, 15.5, 15.5, 5.5, 5.5, 15.5, 15.5, 15.5, 5.5, 15.5, 15.5, 16.5, 5.5, 15.5, 5.5, 15.5, 16.5, 5.5, 15.5, 15.5, 15.5, 5.5, 5.5, 5.5, 15.5, 5.5, 15.5, ...]

======================================================================
FAIL: test_from_import_groupby_param_by_date_prod (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 229, in test_from_import_groupby_param_by_date_prod
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (100.0 %)
[left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...]
[right]: [2.6953641378881614e+245, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, ...]

======================================================================
FAIL: test_from_import_groupby_param_by_date_sem (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 255, in test_from_import_groupby_param_by_date_sem
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (213, 7)
[right]: (213, 8)

======================================================================
FAIL: test_from_import_groupby_param_by_float_sem (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1185, in test_from_import_groupby_param_by_float_sem
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (29973, 6)
[right]: (29973, 8)

======================================================================
FAIL: test_from_import_groupby_param_by_long_prod (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 849, in test_from_import_groupby_param_by_long_prod
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (100.0 %)
[left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[right]: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]

======================================================================
FAIL: test_from_import_groupby_param_by_long_sem (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 875, in test_from_import_groupby_param_by_long_sem
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (100, 6)
[right]: (100, 8)

======================================================================
FAIL: test_from_import_groupby_param_by_symbol_prod (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 541, in test_from_import_groupby_param_by_symbol_prod
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (100.0 %)
[left]:  [0, 0, 0, 0, 0, 0, 0]
[right]: [inf, inf, inf, inf, inf, inf, inf]

======================================================================
FAIL: test_from_import_groupby_param_by_symbol_rank (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 546, in test_from_import_groupby_param_by_symbol_rank
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 1] are different

DataFrame.iloc[:, 1] values are different (4.73333 %)
[left]:  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...]
[right]: [11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, ...]

======================================================================
FAIL: test_from_import_groupby_param_by_symbol_sem (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 566, in test_from_import_groupby_param_by_symbol_sem
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 7)
[right]: (7, 8)

======================================================================
FAIL: test_from_pandas_groupby_param_by_compo_date_symbol_rank (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 1642, in test_from_pandas_groupby_param_by_compo_date_symbol_rank
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (100.0 %)
[left]:  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[right]: [5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5]

======================================================================
FAIL: test_from_pandas_groupby_param_by_symbol_rank (test_groupby.GroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby.py", line 701, in test_from_pandas_groupby_param_by_symbol_rank
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (100.0 %)
[left]:  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[right]: [5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5]

======================================================================
FAIL: test_dfs_groupby_param_by_date_pct_change (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 198, in test_dfs_groupby_param_by_date_pct_change
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (0.93333 %)
[left]:  [nan, -0.9587628865979382, 1.0, -0.375, 16.0, -0.0117647058823529, -0.20238095238095233, -0.835820895522388, 3.7272727272727275, 0.32692307692307687, 0.1594202898550725, -0.925, 2.5, 2.6666666666666665, -0.9090909090909091, 4.714285714285714, 0.2749999999999999, -0.05882352941176472, 0.125, 0.8333333333333333, -0.7676767676767677, 1.5652173913043477, -0.8305084745762712, 5.1, 0.13114754098360648, 0.08695652173913038, 0.1333333333333333, -0.43529411764705883, 0.7916666666666667, -0.6976744186046512, -0.9615384615384616, 0.0, 4.0, 0.0, 0.0, 0.0, 5.6, 0.8181818181818181, 0.43333333333333335, -0.13953488372093026, -0.18918918918918914, -0.7333333333333334, 2.9375, -0.5079365079365079, 0.06451612903225801, -0.2727272727272727, 0.7083333333333333, -0.12195121951219512, 1.3055555555555554, -0.08433734939759041, -0.3157894736842105, -0.9230769230769231, 23.75, -0.030303030303030276, -0.03125, -0.043010752688172005, -0.797752808988764, 2.0555555555555554, -0.49090909090909096, 1.8214285714285716, -0.11392405063291144, -0.5857142857142856, -0.10344827586206895, 1.2307692307692308, -0.1724137931034483, -0.10416666666666663, -0.16279069767441856, 1.4166666666666665, -0.7701149425287357, -0.8, 20.75, -0.7931034482758621, -0.2777777777777778, 4.846153846153846, -0.11842105263157898, 0.23880597014925375, 0.012048192771084265, -0.8928571428571429, 2.0, 1.2222222222222223, -0.43333333333333335, 0.05882352941176472, 1.3333333333333335, -0.2857142857142857, 0.18333333333333335, -0.3802816901408451, 0.8863636363636365, -0.9759036144578314, 7.5, 0.9411764705882353, 1.9696969696969697, -0.8775510204081632, 4.083333333333333, -0.9180327868852459, 2.8, -0.9473684210526316, 90.0, 0.07692307692307687, -0.5204081632653061, -0.574468085106383, ...]
[right]: [nan, -0.9587628865979382, 1.0, -0.375, 16.0, -0.0117647058823529, -0.20238095238095233, -0.835820895522388, 3.7272727272727275, 0.32692307692307687, 0.1594202898550725, -0.925, 2.5, 2.6666666666666665, -0.9090909090909091, 4.714285714285714, 0.2749999999999999, -0.05882352941176472, 0.125, 0.8333333333333333, -0.7676767676767677, 1.5652173913043477, -0.8305084745762712, 5.1, 0.13114754098360648, 0.08695652173913038, 0.1333333333333333, -0.43529411764705883, 0.7916666666666667, -0.6976744186046512, -0.9615384615384616, 0.0, 4.0, 0.0, 0.0, 0.0, 5.6, 0.8181818181818181, 0.43333333333333335, -0.13953488372093026, -0.18918918918918914, -0.7333333333333334, 2.9375, -0.5079365079365079, 0.06451612903225801, -0.2727272727272727, 0.7083333333333333, -0.12195121951219512, 1.3055555555555554, -0.08433734939759041, -0.3157894736842105, -0.9230769230769231, 23.75, -0.030303030303030276, -0.03125, -0.043010752688172005, -0.797752808988764, 2.0555555555555554, -0.49090909090909096, 1.8214285714285716, -0.11392405063291144, -0.5857142857142856, -0.10344827586206895, 1.2307692307692308, -0.1724137931034483, -0.10416666666666663, -0.16279069767441856, 1.4166666666666665, -0.7701149425287357, -0.8, 20.75, -0.7931034482758621, -0.2777777777777778, 4.846153846153846, -0.11842105263157898, 0.23880597014925375, 0.012048192771084265, -0.8928571428571429, 2.0, 1.2222222222222223, -0.43333333333333335, 0.05882352941176472, 1.3333333333333335, -0.2857142857142857, 0.18333333333333335, -0.3802816901408451, 0.8863636363636365, -0.9759036144578314, 7.5, 0.9411764705882353, 1.9696969696969697, -0.8775510204081632, 4.083333333333333, -0.9180327868852459, 2.8, -0.9473684210526316, 90.0, 0.07692307692307687, -0.5204081632653061, -0.574468085106383, ...]

======================================================================
FAIL: test_dfs_groupby_param_by_date_prod (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 188, in test_dfs_groupby_param_by_date_prod
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 1] are different

DataFrame.iloc[:, 1] values are different (28.6385 %)
[left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...]
[right]: [2.2498699867082513e+217, 2.6234395506764777e+231, 0.0, 0.0, 2.191838507587846e+223, 0.0, 0.0, 5.379839648353413e+224, 0.0, 1.494705553433169e+222, 0.0, 0.0, 1.3495197596888951e+224, 0.0, 5.184847477830295e+227, 0.0, 0.0, 0.0, 8.509742246950846e+228, 0.0, 0.0, 0.0, 0.0, 3.2062343649314737e+227, 0.0, 3.118750457150527e+223, 0.0, 0.0, 1.21605451943161e+233, 0.0, 0.0, 0.0, 6.277046942629889e+218, 2.4467549925879615e+223, 0.0, 2.2119641366906548e+223, 0.0, 0.0, 0.0, 3.1307272805551403e+219, 0.0, 1.8033011464906804e+224, 0.0, 0.0, 0.0, 0.0, 0.0, 4.8219569094104e+224, 2.446739173330553e+225, 1.801082117920798e+219, 4.1301489793164606e+215, 0.0, 0.0, 5.92248251214139e+225, 3.981805116161071e+229, 1.2872481828123635e+227, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.744582891524325e+220, 7.948066155660438e+225, 0.0, 2.3076009825456177e+222, 0.0, 0.0, 0.0, 9.643962462895983e+213, 5.630086694071531e+216, 1.962339038840082e+234, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.259040864103862e+210, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5136648402709797e+218, 9.51423677673422e+230, 0.0, 0.0, 7.983065282059031e+225, 0.0, 6.403966354636022e+219, 6.86144359638343e+227, 0.0, 2.2882553162800334e+225, 0.0, ...]

======================================================================
FAIL: test_dfs_groupby_param_by_long_prod (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 497, in test_dfs_groupby_param_by_long_prod
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 1] are different

DataFrame.iloc[:, 1] values are different (13.0 %)
[left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[right]: [0.0, 0.0, 0.0, 0.0, nan, nan, 0.0, 0.0, 0.0, inf, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, inf, 0.0, nan, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, nan, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, nan, 0.0, 0.0, 0.0, 0.0, inf, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, inf, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, nan, 0.0, 0.0, 0.0, nan, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, nan, 0.0, 0.0, inf, 0.0]

======================================================================
FAIL: test_dfs_groupby_param_by_symbol_cumprod (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 273, in test_dfs_groupby_param_by_symbol_cumprod
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 1] are different

DataFrame.iloc[:, 1] values are different (2.14333 %)
[left]:  [97.0, 4.0, 8.0, 5.0, 85.0, 84.0, 67.0, 1067.0, 208.0, 552.0, 400.0, 510.0, 1764.0, 5159.0, 7469.0, 8320.0, 28152.0, 19200.0, 27540.0, 174636.0, 118657.0, 440671.0, 83200.0, 1717272.0, 1324800.0, 2065500.0, 14844060.0, 5695536.0, 37897706.0, 2163200.0, 37897706.0, 2163200.0, 8586360.0, 6624000.0, 10327500.0, 74220300.0, 1250624298.0, 129792000.0, 738426960.0, 490176000.0, 619650000.0, 1187524800.0, 358818768.0, 38769353238.0, 4283136000.0, 17722247040.0, 20097216000.0, 22307400000.0, 98564558400.0, 27270226368.0, 2016006368376.0, 17132544000.0, 1754502456960.0, 1929332736000.0, 2074588200000.0, 8772245697600.0, 490864074624.0, 110880350260680.0, 479711232000.0, 138605694099840.0, 135053291520000.0, 60163057800000.0, 228078388137600.0, 28470116328192.0, 5322256812512640.0, 20627582976000.0, 4989804987594240.0, 1.174963636224e+16, 1203261156000000.0, 912313552550400.0, 2476900120552704.0, 9.580062262522752e+16, 268158578688000.0, 3.7922517905716224e+17, 7.8722563627008e+17, 9.9870675948e+16, 7.66343384142336e+16, 2.2292101084974336e+16, 2.586616810881143e+18, 1.608951472128e+16, -5.553087985766035e+18, -8.553365241696223e+18, 8.389136779632e+18, 4.598060304854016e+18, 1.5827391770331779e+18, 3.130675236512984e+18, 1.33542972186624e+18, 7.340568102177481e+18, 2.166743480840618e+18, 1.4035262221272576e+17, 7.888052106664329e+18, 5.4612605068858266e+17, 6.503748690196512e+18, 6.6771486093312e+18, -8.10315864830428e+18, 2.166743480840618e+18, -5.674655452351507e+18, -1.7341446426969047e+18, 7.221180308653833e+18, 9.477652879633736e+17, ...]
[right]: [97.0, 4.0, 8.0, 5.0, 85.0, 84.0, 67.0, 1067.0, 208.0, 552.0, 400.0, 510.0, 1764.0, 5159.0, 7469.0, 8320.0, 28152.0, 19200.0, 27540.0, 174636.0, 118657.0, 440671.0, 83200.0, 1717272.0, 1324800.0, 2065500.0, 14844060.0, 5695536.0, 37897706.0, 2163200.0, 37897706.0, 2163200.0, 8586360.0, 6624000.0, 10327500.0, 74220300.0, 1250624298.0, 129792000.0, 738426960.0, 490176000.0, 619650000.0, 1187524800.0, 358818768.0, 38769353238.0, 4283136000.0, 17722247040.0, 20097216000.0, 22307400000.0, 98564558400.0, 27270226368.0, 2016006368376.0, 17132544000.0, 1754502456960.0, 1929332736000.0, 2074588200000.0, 8772245697600.0, 490864074624.0, 110880350260680.0, 479711232000.0, 138605694099840.0, 135053291520000.0, 60163057800000.0, 228078388137600.0, 28470116328192.0, 5322256812512640.0, 20627582976000.0, 4989804987594240.0, 1.174963636224e+16, 1203261156000000.0, 912313552550400.0, 2476900120552704.0, 9.580062262522752e+16, 268158578688000.0, 3.7922517905716224e+17, 7.8722563627008e+17, 9.9870675948e+16, 7.66343384142336e+16, 2.2292101084974336e+16, 2.586616810881143e+18, 1.608951472128e+16, 1.2893656087943516e+19, 2.834012290572288e+19, 8.389136779632e+18, 4.598060304854016e+18, 1.5827391770331779e+18, 1.1381113967877028e+20, 1.33542972186624e+18, 2.5787312175887032e+19, 4.8178208939728896e+20, 2.76841513727856e+20, 4.506099098756936e+20, 1.8992870124398133e+19, 6.942479520404988e+21, 6.6771486093312e+18, 4.899589313418536e+20, 4.8178208939728896e+20, 2.5192577749234894e+22, 4.415977116781797e+22, 8.926648958467122e+20, 1.3884959040809975e+23, ...]

======================================================================
FAIL: test_dfs_groupby_param_by_symbol_prod (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 341, in test_dfs_groupby_param_by_symbol_prod
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 3] are different

DataFrame.iloc[:, 3] values are different (14.28571 %)
[left]:  [0, 0, 0, 0, 0, 0, 0]
[right]: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, nan]

======================================================================
FAIL: test_dfs_groupby_param_by_symbol_rank (test_groupby_partition.DfsGroupByTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_groupby_partition.py", line 346, in test_dfs_groupby_param_by_symbol_rank
    assert_frame_equal(a.to_pandas(), b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (4.73333 %)
[left]:  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...]
[right]: [11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, 11.0, 10.5, 10.5, 10.5, 10.5, 10.0, 11.5, ...]

======================================================================
FAIL: test_index_properties_is_unique (test_index.IndexTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_index.py", line 42, in test_index_properties_is_unique
    self.assertEqual(pi.is_unique, oi.is_unique)
AssertionError: True != False

======================================================================
FAIL: test_join_from_csv_index_param_lsuffix_paran_how (test_join.JoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join.py", line 168, in test_join_from_csv_index_param_lsuffix_paran_how
    assert_frame_equal(odf_join.to_pandas(), pdf_join, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (100.0 %)
[left]:  DatetimeIndex(['2010-01-07', '2010-01-07', '2010-01-08', '2010-01-08',
               '2010-01-11', '2010-01-11', '2010-01-12', '2010-01-12',
               '2010-01-13', '2010-01-13',
               ...
               '2015-12-22', '2015-12-23', '2015-12-24', '2015-12-28',
               '2015-12-29', '2015-12-30', '2015-12-31', '2010-01-04',
               '2010-01-05', '2010-01-06'],
              dtype='datetime64[ns]', name='date', length=2294, freq=None)
[right]: DatetimeIndex(['2010-01-04', '2010-01-05', '2010-01-06', '2010-01-07',
               '2010-01-07', '2010-01-08', '2010-01-08', '2010-01-11',
               '2010-01-11', '2010-01-12',
               ...
               '2015-12-17', '2015-12-18', '2015-12-21', '2015-12-22',
               '2015-12-23', '2015-12-24', '2015-12-28', '2015-12-29',
               '2015-12-30', '2015-12-31'],
              dtype='datetime64[ns]', name='date', length=2294, freq=None)

======================================================================
FAIL: test_join_from_dfs_param_how (test_join_partition.DfsJoinTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_join_partition.py", line 143, in test_join_from_dfs_param_how
    assert_frame_equal(odfs_join.to_pandas(), pdf_join, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (2032, 20)
[right]: (2032, 21)

======================================================================
FAIL: test_assert_original_dataframe_equal (test_merge.MergeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_merge.py", line 76, in test_assert_original_dataframe_equal
    assert_frame_equal(self.odf_csv_left.to_pandas(), self.pdf_csv_left, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 0] are different

DataFrame.iloc[:, 0] values are different (100.0 %)
[left
[right]: [10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, 10001, 10002, ...]

======================================================================
FAIL: test_series_hist (test_plotting.PLottingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_plotting.py", line 113, in test_series_hist
    self.assertEqual(plot_to_base64(ax1), plot_to_base64(ax2))
AssertionError: b'iVB[179 chars]cXAAAelklEQVR4nO3de5CV9XnA8edw2cUiu+KN3Q0bszUS[10424 chars]QmCC' != b'iVB[179 chars]cXAAAbiUlEQVR4nO3df2zUhf348dcB5RSkTKgCDZ1hOucU[9384 chars]YII='

======================================================================
FAIL: test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_max (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3727, in test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_max
    fq = LastWeekOfMonth(1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 3] are different

DataFrame.iloc[:, 3] values are different (100.0 %)
[left]:  [1970-01-01T13:30:00.001000000, 1970-01-01T13:30:00.003000000, 1970-01-01T13:30:00.005000000, 1970-01-01T13:30:00.007000000, 1970-01-01T13:30:00.008000000, 1970-01-01T13:30:00.010000000, 1970-01-01T13:30:00.012000000, 1970-01-01T13:30:00.014000000, 1970-01-01T13:30:00.016000000, 1970-01-01T13:30:00.018000000, 1970-01-01T13:30:00.020000000, 1970-01-01T13:30:00.021000000, 1970-01-01T13:30:00.023000000, 1970-01-01T13:30:00.025000000, 1970-01-01T13:30:00.027000000, 1970-01-01T13:30:00.029000000, 1970-01-01T13:30:00.031000000, 1970-01-01T13:30:00.032000000, 1970-01-01T13:30:00.034000000, 1970-01-01T13:30:00.036000000, 1970-01-01T13:30:00.038000000, 1970-01-01T13:30:00.040000000, 1970-01-01T13:30:00.042000000, 1970-01-01T13:30:00.043000000, 1970-01-01T13:30:00.045000000, 1970-01-01T13:30:00.047000000, 1970-01-01T13:30:00.049000000, 1970-01-01T13:30:00.050000000, 1970-01-01T13:30:00.053000000, 1970-01-01T13:30:00.054000000, 1970-01-01T13:30:00.056000000, 1970-01-01T13:30:00.058000000, 1970-01-01T13:30:00.060000000, 1970-01-01T13:30:00.062000000, 1970-01-01T13:30:00.064000000, 1970-01-01T13:30:00.065000000, 1970-01-01T13:30:00.067000000, 1970-01-01T13:30:00.069000000, 1970-01-01T13:30:00.071000000, 1970-01-01T13:30:00.073000000, 1970-01-01T13:30:00.075000000, 1970-01-01T13:30:00.076000000, 1970-01-01T13:30:00.078000000, 1970-01-01T13:30:00.080000000, 1970-01-01T13:30:00.082000000, 1970-01-01T13:30:00.084000000, 1970-01-01T13:30:00.085000000, 1970-01-01T13:30:00.088000000, 1970-01-01T13:30:00.089000000, 1970-01-01T13:30:00.091000000, 1970-01-01T13:30:00.093000000, 1970-01-01T13:30:00.095000000, 1970-01-01T13:30:00.096000000, 1970-01-01T13:30:00.098000000, 1970-01-01T13:30:00.100000000, 1970-01-01T13:30:00.100000000]
[right]: [2019-12-02T13:30:00.001000000, 2019-12-02T13:30:00.003000000, 2019-12-02T13:30:00.005000000, 2019-12-02T13:30:00.007000000, 2019-12-02T13:30:00.008000000, 2019-12-02T13:30:00.010000000, 2019-12-02T13:30:00.012000000, 2019-12-02T13:30:00.014000000, 2019-12-02T13:30:00.016000000, 2019-12-02T13:30:00.018000000, 2019-12-02T13:30:00.020000000, 2019-12-02T13:30:00.021000000, 2019-12-02T13:30:00.023000000, 2019-12-02T13:30:00.025000000, 2019-12-02T13:30:00.027000000, 2019-12-02T13:30:00.029000000, 2019-12-02T13:30:00.031000000, 2019-12-02T13:30:00.032000000, 2019-12-02T13:30:00.034000000, 2019-12-02T13:30:00.036000000, 2019-12-02T13:30:00.038000000, 2019-12-02T13:30:00.040000000, 2019-12-02T13:30:00.042000000, 2019-12-02T13:30:00.043000000, 2019-12-02T13:30:00.045000000, 2019-12-02T13:30:00.047000000, 2019-12-02T13:30:00.049000000, 2019-12-02T13:30:00.050000000, 2019-12-02T13:30:00.053000000, 2019-12-02T13:30:00.054000000, 2019-12-02T13:30:00.056000000, 2019-12-02T13:30:00.058000000, 2019-12-02T13:30:00.060000000, 2019-12-02T13:30:00.062000000, 2019-12-02T13:30:00.064000000, 2019-12-02T13:30:00.065000000, 2019-12-02T13:30:00.067000000, 2019-12-02T13:30:00.069000000, 2019-12-02T13:30:00.071000000, 2019-12-02T13:30:00.073000000, 2019-12-02T13:30:00.075000000, 2019-12-02T13:30:00.076000000, 2019-12-02T13:30:00.078000000, 2019-12-02T13:30:00.080000000, 2019-12-02T13:30:00.082000000, 2019-12-02T13:30:00.084000000, 2019-12-02T13:30:00.085000000, 2019-12-02T13:30:00.088000000, 2019-12-02T13:30:00.089000000, 2019-12-02T13:30:00.091000000, 2019-12-02T13:30:00.093000000, 2019-12-02T13:30:00.095000000, 2019-12-02T13:30:00.096000000, 2019-12-02T13:30:00.098000000, 2019-12-02T13:30:00.100000000, 2019-12-02T13:30:00.100000000]

======================================================================
FAIL: test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_min (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3801, in test_from_import_dataframe_resample_param_rule_lastweekofmonth_param_on_date_min
    assert_frame_equal(a.to_pandas(), b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 3] are different

DataFrame.iloc[:, 3] values are different (100.0 %)
[left]:  [1970-01-01T13:30:00.000000000, 1970-01-01T13:30:00.001000000, 1970-01-01T13:30:00.003000000, 1970-01-01T13:30:00.005000000, 1970-01-01T13:30:00.007000000, 1970-01-01T13:30:00.008000000, 1970-01-01T13:30:00.010000000, 1970-01-01T13:30:00.012000000, 1970-01-01T13:30:00.014000000, 1970-01-01T13:30:00.016000000, 1970-01-01T13:30:00.018000000, 1970-01-01T13:30:00.020000000, 1970-01-01T13:30:00.021000000, 1970-01-01T13:30:00.023000000, 1970-01-01T13:30:00.025000000, 1970-01-01T13:30:00.027000000, 1970-01-01T13:30:00.029000000, 1970-01-01T13:30:00.031000000, 1970-01-01T13:30:00.032000000, 1970-01-01T13:30:00.034000000, 1970-01-01T13:30:00.036000000, 1970-01-01T13:30:00.038000000, 1970-01-01T13:30:00.040000000, 1970-01-01T13:30:00.042000000, 1970-01-01T13:30:00.043000000, 1970-01-01T13:30:00.045000000, 1970-01-01T13:30:00.047000000, 1970-01-01T13:30:00.049000000, 1970-01-01T13:30:00.050000000, 1970-01-01T13:30:00.053000000, 1970-01-01T13:30:00.054000000, 1970-01-01T13:30:00.056000000, 1970-01-01T13:30:00.058000000, 1970-01-01T13:30:00.060000000, 1970-01-01T13:30:00.062000000, 1970-01-01T13:30:00.064000000, 1970-01-01T13:30:00.065000000, 1970-01-01T13:30:00.067000000, 1970-01-01T13:30:00.069000000, 1970-01-01T13:30:00.071000000, 1970-01-01T13:30:00.073000000, 1970-01-01T13:30:00.075000000, 1970-01-01T13:30:00.076000000, 1970-01-01T13:30:00.078000000, 1970-01-01T13:30:00.080000000, 1970-01-01T13:30:00.082000000, 1970-01-01T13:30:00.084000000, 1970-01-01T13:30:00.085000000, 1970-01-01T13:30:00.088000000, 1970-01-01T13:30:00.089000000, 1970-01-01T13:30:00.091000000, 1970-01-01T13:30:00.093000000, 1970-01-01T13:30:00.095000000, 1970-01-01T13:30:00.096000000, 1970-01-01T13:30:00.098000000, 1970-01-01T13:30:00.100000000]
[right]: [2019-12-02T13:30:00.000000000, 2019-12-02T13:30:00.001000000, 2019-12-02T13:30:00.003000000, 2019-12-02T13:30:00.005000000, 2019-12-02T13:30:00.007000000, 2019-12-02T13:30:00.008000000, 2019-12-02T13:30:00.010000000, 2019-12-02T13:30:00.012000000, 2019-12-02T13:30:00.014000000, 2019-12-02T13:30:00.016000000, 2019-12-02T13:30:00.018000000, 2019-12-02T13:30:00.020000000, 2019-12-02T13:30:00.021000000, 2019-12-02T13:30:00.023000000, 2019-12-02T13:30:00.025000000, 2019-12-02T13:30:00.027000000, 2019-12-02T13:30:00.029000000, 2019-12-02T13:30:00.031000000, 2019-12-02T13:30:00.032000000, 2019-12-02T13:30:00.034000000, 2019-12-02T13:30:00.036000000, 2019-12-02T13:30:00.038000000, 2019-12-02T13:30:00.040000000, 2019-12-02T13:30:00.042000000, 2019-12-02T13:30:00.043000000, 2019-12-02T13:30:00.045000000, 2019-12-02T13:30:00.047000000, 2019-12-02T13:30:00.049000000, 2019-12-02T13:30:00.050000000, 2019-12-02T13:30:00.053000000, 2019-12-02T13:30:00.054000000, 2019-12-02T13:30:00.056000000, 2019-12-02T13:30:00.058000000, 2019-12-02T13:30:00.060000000, 2019-12-02T13:30:00.062000000, 2019-12-02T13:30:00.064000000, 2019-12-02T13:30:00.065000000, 2019-12-02T13:30:00.067000000, 2019-12-02T13:30:00.069000000, 2019-12-02T13:30:00.071000000, 2019-12-02T13:30:00.073000000, 2019-12-02T13:30:00.075000000, 2019-12-02T13:30:00.076000000, 2019-12-02T13:30:00.078000000, 2019-12-02T13:30:00.080000000, 2019-12-02T13:30:00.082000000, 2019-12-02T13:30:00.084000000, 2019-12-02T13:30:00.085000000, 2019-12-02T13:30:00.088000000, 2019-12-02T13:30:00.089000000, 2019-12-02T13:30:00.091000000, 2019-12-02T13:30:00.093000000, 2019-12-02T13:30:00.095000000, 2019-12-02T13:30:00.096000000, 2019-12-02T13:30:00.098000000, 2019-12-02T13:30:00.100000000]

======================================================================
FAIL: test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_count (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3431, in test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_count
    a = self.odf_csv.resample(fq, on="date").count()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (3.57143 %)
[left]:  DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-01-30', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-01-29', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq=None)
[right]: DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-02-06', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-02-05', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq='WOM-1MON')

======================================================================
FAIL: test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_max (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3468, in test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_max
    a = self.odf_csv.resample(fq, on="date").max()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (3.57143 %)
[left]:  DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-01-30', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-01-29', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq=None)
[right]: DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-02-06', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-02-05', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq='WOM-1MON')

======================================================================
FAIL: test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_mean (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3505, in test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_mean
    a = self.odf_csv.resample(fq, on="date").mean()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (3.57143 %)
[left]:  DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-01-30', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-01-29', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq=None)
[right]: DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-02-06', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-02-05', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq='WOM-1MON')

======================================================================
FAIL: test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_min (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3542, in test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_min
    a = self.odf_csv.resample(fq, on="date").min()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (3.57143 %)
[left]:  DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-01-30', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-01-29', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq=None)
[right]: DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-02-06', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-02-05', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq='WOM-1MON')

======================================================================
FAIL: test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_std (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3579, in test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_std
    a = self.odf_csv.resample(fq, on="date").std()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (3.57143 %)
[left]:  DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-01-30', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-01-29', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq=None)
[right]: DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-02-06', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-02-05', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq='WOM-1MON')

======================================================================
FAIL: test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_sum (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3616, in test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_sum
    a = self.odf_csv.resample(fq, on="date").sum()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (3.57143 %)
[left]:  DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-01-30', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-01-29', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq=None)
[right]: DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-02-06', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-02-05', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq='WOM-1MON')

======================================================================
FAIL: test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_var (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 3653, in test_from_import_dataframe_resample_param_rule_weekofmonth_param_on_date_var
    a = self.odf_csv.resample(fq, on="date").var()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (3.57143 %)
[left]:  DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-01-30', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-01-29', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq=None)
[right]: DatetimeIndex(['2014-12-01', '2015-01-05', '2015-02-02', '2015-03-02',
               '2015-04-06', '2015-05-04', '2015-06-01', '2015-07-06',
               '2015-08-03', '2015-09-07', '2015-10-05', '2015-11-02',
               '2015-12-07', '2016-01-04', '2016-02-01', '2016-03-07',
               '2016-04-04', '2016-05-02', '2016-06-06', '2016-07-04',
               '2016-08-01', '2016-09-05', '2016-10-03', '2016-11-07',
               '2016-12-05', '2017-01-02', '2017-02-06', '2017-03-06',
               '2017-04-03', '2017-05-01', '2017-06-05', '2017-07-03',
               '2017-08-07', '2017-09-04', '2017-10-02', '2017-11-06',
               '2017-12-04', '2018-01-01', '2018-02-05', '2018-03-05',
               '2018-04-02', '2018-05-07', '2018-06-04', '2018-07-02',
               '2018-08-06', '2018-09-03', '2018-10-01', '2018-11-05',
               '2018-12-03', '2019-01-07', '2019-02-04', '2019-03-04',
               '2019-04-01', '2019-05-06', '2019-06-03', '2019-07-01'],
              dtype='datetime64[ns]', name='date', freq='WOM-1MON')

======================================================================
FAIL: test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_count (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 1363, in test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_count
    a = self.odf.resample("BM", on="month").count()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 13)
[right]: (10, 13)

======================================================================
FAIL: test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_max (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 1398, in test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_max
    a = self.odf.resample("BM", on="month").max()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 13)
[right]: (10, 13)

======================================================================
FAIL: test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_mean (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 1430, in test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_mean
    a = self.odf.resample("BM", on="month").mean()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 8)
[right]: (10, 8)

======================================================================
FAIL: test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_min (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 1462, in test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_min
    a = self.odf.resample("BM", on="month").min()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 13)
[right]: (10, 13)

======================================================================
FAIL: test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_std (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 1496, in test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_std
    pdf.tbool = pdf.tbool.astype('float32')
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 8)
[right]: (10, 8)

======================================================================
FAIL: test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_sum (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 1528, in test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_sum
    a = self.odf.resample("BM", on="month").sum()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 8)
[right]: (10, 8)

======================================================================
FAIL: test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_var (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 1560, in test_from_pandas_dataframe_resample_param_rule_businessmonth_param_on_month_var
    a = self.odf.resample("BM", on="month").var()
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (7, 8)
[right]: (10, 8)

======================================================================
FAIL: test_resample (test_resample.ResampleTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_resample.py", line 373, in test_resample
    assert_frame_equal(odf.resample(sme, on="date").sum().to_pandas(), pdf.resample(sme, on="date").sum())
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1159, in assert_series_equal
    assert_attr_equal("dtype", left, right)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 776, in assert_attr_equal
    raise_assert_detail(obj, msg, left_attr, right_attr)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: Attributes are different

Attribute "dtype" are different
[left]:  int64
[right]: int32

======================================================================
FAIL: test_series_all (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1613, in test_series_all
    self.assertEqual(os.all(), ps.all())
AssertionError: False != True

======================================================================
FAIL: test_series_clip (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1660, in test_series_clip
    assert_series_equal(os.clip().to_pandas(), ps.clip())
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1122, in assert_series_equal
    _check_isinstance(left, right, Series)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 391, in _check_isinstance
    err_msg.format(name=cls_name, exp_type=cls, act_type=type(left))
AssertionError: Series Expected type <class 'pandas.core.series.Series'>, found <class 'pandas.core.frame.DataFrame'> instead

======================================================================
FAIL: test_series_idxmax (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1780, in test_series_idxmax
    self.assertEqual(oser.idxmax(), pser.idxmax())
AssertionError: 'b' != ('b', 'f')

======================================================================
FAIL: test_series_idxmin (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1791, in test_series_idxmin
    self.assertEqual(oser.idxmin(), pser.idxmin())
AssertionError: 'C' != 'A'
- C
+ A


======================================================================
FAIL: test_series_isin (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1540, in test_series_isin
    ds.isin(1)
AssertionError: TypeError not raised

======================================================================
FAIL: test_series_rank (test_series.SeriesTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_series.py", line 1746, in test_series_rank
    repr(oser.rank().sort_index()))
AssertionError: '0    1.5\n1    3.0\n2    4.0\n3    1.5\nName: x, dtype: float64' != '   x\n0  1\n1  3\n2  4\n3  1'
- 0    1.5
- 1    3.0
- 2    4.0
- 3    1.5
- Name: x, dtype: float64+    x
+ 0  1
+ 1  3
+ 2  4
+ 3  1

======================================================================
FAIL: test_from_import_where_operation_add (test_where.WhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where.py", line 331, in test_from_import_where_operation_add
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (99.96258 %)
[left]:  DatetimeIndex(['2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08',
               ...
               '2010-08-17', '2010-08-17', '2010-08-17', '2010-08-17',
               '2010-08-17', '2010-08-17', '2010-08-17', '2010-08-17',
               '2010-08-17', '2010-08-17'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)
[right]: DatetimeIndex(['2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04',
               ...
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)

======================================================================
FAIL: test_from_import_where_operation_div (test_where.WhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where.py", line 351, in test_from_import_where_operation_div
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (99.96258 %)
[left]:  DatetimeIndex(['2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08',
               ...
               '2010-08-17', '2010-08-17', '2010-08-17', '2010-08-17',
               '2010-08-17', '2010-08-17', '2010-08-17', '2010-08-17',
               '2010-08-17', '2010-08-17'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)
[right]: DatetimeIndex(['2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04',
               ...
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)

======================================================================
FAIL: test_from_import_where_operation_mul (test_where.WhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where.py", line 343, in test_from_import_where_operation_mul
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (99.96258 %)
[left]:  DatetimeIndex(['2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08',
               ...
               '2010-08-17', '2010-08-17', '2010-08-17', '2010-08-17',
               '2010-08-17', '2010-08-17', '2010-08-17', '2010-08-17',
               '2010-08-17', '2010-08-17'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)
[right]: DatetimeIndex(['2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04',
               ...
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)

======================================================================
FAIL: test_from_import_where_operation_resample (test_where.WhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where.py", line 368, in test_from_import_where_operation_resample
    assert_frame_equal(a, b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1510, 15)
[right]: (2188, 15)

======================================================================
FAIL: test_from_import_where_operation_rolling (test_where.WhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where.py", line 374, in test_from_import_where_operation_rolling
    assert_frame_equal(a, b, check_dtype=False, check_index_type=False, check_less_precise=1)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1402, in assert_frame_equal
    obj="{obj}.iloc[:, {idx}]".format(obj=obj, idx=i),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1207, in assert_series_equal
    obj="{obj}".format(obj=obj),
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.iloc[:, 3] are different

DataFrame.iloc[:, 3] values are different (90.33489 %)
[left]:  [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, ...]
[right]: [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, ...]

======================================================================
FAIL: test_from_import_where_operation_sub (test_where.WhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where.py", line 337, in test_from_import_where_operation_sub
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (99.96258 %)
[left]:  DatetimeIndex(['2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08',
               ...
               '2010-08-17', '2010-08-17', '2010-08-17', '2010-08-17',
               '2010-08-17', '2010-08-17', '2010-08-17', '2010-08-17',
               '2010-08-17', '2010-08-17'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)
[right]: DatetimeIndex(['2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04',
               ...
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)

======================================================================
FAIL: test_from_import_where_param_cond_less_than (test_where.WhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where.py", line 272, in test_from_import_where_param_cond_less_than
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (8763, 20)
[right]: (8609, 20)

======================================================================
FAIL: test_from_import_where_param_cond_less_than_or_equal (test_where.WhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where.py", line 260, in test_from_import_where_param_cond_less_than_or_equal
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (8777, 20)
[right]: (8623, 20)

======================================================================
FAIL: test_dfs_from_import_where_operation_add (test_where_partition.DfsWhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where_partition.py", line 403, in test_dfs_from_import_where_operation_add
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (99.5352 %)
[left]:  DatetimeIndex(['2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08',
               ...
               '2015-07-20', '2015-07-20', '2015-07-20', '2015-07-20',
               '2015-07-20', '2015-07-20', '2015-07-20', '2015-07-20',
               '2015-07-20', '2015-07-20'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)
[right]: DatetimeIndex(['2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04',
               ...
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)

======================================================================
FAIL: test_dfs_from_import_where_operation_div (test_where_partition.DfsWhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where_partition.py", line 421, in test_dfs_from_import_where_operation_div
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (99.5352 %)
[left]:  DatetimeIndex(['2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08',
               ...
               '2015-07-20', '2015-07-20', '2015-07-20', '2015-07-20',
               '2015-07-20', '2015-07-20', '2015-07-20', '2015-07-20',
               '2015-07-20', '2015-07-20'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)
[right]: DatetimeIndex(['2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04',
               ...
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)

======================================================================
FAIL: test_dfs_from_import_where_operation_mul (test_where_partition.DfsWhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where_partition.py", line 415, in test_dfs_from_import_where_operation_mul
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (99.5352 %)
[left]:  DatetimeIndex(['2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08',
               ...
               '2015-07-20', '2015-07-20', '2015-07-20', '2015-07-20',
               '2015-07-20', '2015-07-20', '2015-07-20', '2015-07-20',
               '2015-07-20', '2015-07-20'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)
[right]: DatetimeIndex(['2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04',
               ...
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)

======================================================================
FAIL: test_dfs_from_import_where_operation_resample (test_where_partition.DfsWhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where_partition.py", line 432, in test_dfs_from_import_where_operation_resample
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (1510, 15)
[right]: (2188, 15)

======================================================================
FAIL: test_dfs_from_import_where_operation_rolling (test_where_partition.DfsWhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where_partition.py", line 437, in test_dfs_from_import_where_operation_rolling
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (89.09136 %)
[left]:  Int64Index([10025, 10025, 10025, 10026, 10026, 10026, 10026, 10026, 10026,
            10026,
            ...
            10200, 10200, 10200, 10200, 10200, 10200, 10200, 10200, 10200,
            10200],
           dtype='int64', name='PERMNO', length=8122)
[right]: Int64Index([10025, 10025, 10025, 10025, 10025, 10025, 10025, 10025, 10025,
            10025,
            ...
            10225, 10225, 10225, 10225, 10225, 10225, 10225, 10225, 10225,
            10225],
           dtype='int64', name='PERMNO', length=8122)

======================================================================
FAIL: test_dfs_from_import_where_operation_sub (test_where_partition.DfsWhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where_partition.py", line 409, in test_dfs_from_import_where_operation_sub
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1360, in assert_frame_equal
    obj="{obj}.index".format(obj=obj),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 690, in assert_index_equal
    robj=right,
  File "pandas\_libs\testing.pyx", line 65, in pandas._libs.testing.assert_almost_equal
  File "pandas\_libs\testing.pyx", line 178, in pandas._libs.testing.assert_almost_equal
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame.index are different

DataFrame.index values are different (99.5352 %)
[left]:  DatetimeIndex(['2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08', '2010-01-08', '2010-01-08',
               '2010-01-08', '2010-01-08',
               ...
               '2015-07-20', '2015-07-20', '2015-07-20', '2015-07-20',
               '2015-07-20', '2015-07-20', '2015-07-20', '2015-07-20',
               '2015-07-20', '2015-07-20'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)
[right]: DatetimeIndex(['2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04', '2010-01-04', '2010-01-04',
               '2010-01-04', '2010-01-04',
               ...
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31', '2015-12-31', '2015-12-31',
               '2015-12-31', '2015-12-31'],
              dtype='datetime64[ns]', name='date', length=120268, freq=None)

======================================================================
FAIL: test_dfs_from_import_where_param_cond_less_than (test_where_partition.DfsWhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where_partition.py", line 323, in test_dfs_from_import_where_param_cond_less_than
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (8763, 20)
[right]: (8609, 20)

======================================================================
FAIL: test_dfs_from_import_where_param_cond_less_than_or_equal (test_where_partition.DfsWhereTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\ywang\Documents\GitHub\orca\tests\unit_testing\test_where_partition.py", line 305, in test_dfs_from_import_where_param_cond_less_than_or_equal
    assert_frame_equal(a, b, check_dtype=False)
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 1345, in assert_frame_equal
    "{shape!r}".format(shape=right.shape),
  File "C:\Users\ywang\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\util\testing.py", line 932, in raise_assert_detail
    raise AssertionError(msg)
AssertionError: DataFrame are different

DataFrame shape mismatch
[left]:  (8777, 20)
[right]: (8623, 20)

----------------------------------------------------------------------
Ran 969 tests in 726.018s

FAILED (failures=66, errors=149)
